begin_compilation
  name " TruffleGraal::TurtleRotateRootNode@44c8afef"
  method "unresolved TruffleGraal TruffleGraal.TurtleRotateRootNode@44c8afef()"
  date 1542822754567
end_compilation
begin_compilation
  name " TruffleHotSpotCompilation-3507[TurtleRotateRootNode@44c8afef]"
  method "TruffleHotSpotCompilation-3507[TurtleRotateRootNode@44c8afef]"
  date 1542822754858
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a188  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCompilationProfile.castArgumentsImpl(OptimizedCompilationProfile.java:263) [bci: 77]
at org.graalvm.compiler.truffle.runtime.OptimizedCompilationProfile.injectArgumentProfile(OptimizedCompilationProfile.java:249) [bci: 43]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:272) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
=== Succesors ===
next: d189 
=== Usages ===
v192 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v191 #next: d189  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a188 
=== Succesors ===
=== Usages ===
d189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.doubleValue(Double.java:716) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.doubleValue(BoxingSnippets.java:127) [bci: 5]
at java.lang.Double.doubleValue() [bci: -1]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:21) [bci: 11]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
=== Succesors ===
next: d190 
=== Usages ===
d106 
=== Predecessor ===
a188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v192 #next: d190  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: TurtleImpl@1048281121
stableDimension: 0
stamp: a!# LkmLogo/interpreter/kmLogo/impl/TurtleImpl;
stampKind: a -
value: Object[TurtleImpl@1048281121]
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a100 
index: - 
=== Succesors ===
=== Usages ===
d190 v181 v182 v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:263) [bci: 1]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
=== Succesors ===
next: v104 
=== Usages ===
d106 
=== Predecessor ===
d189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v193 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid d105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 8]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: 360.0
stableDimension: 0
stamp: f64! [360.0]
stampKind: f64
value: double[360.0|0x4076800000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 d123 d128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$7/170383657@12882a6b
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:263) [bci: 5]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d189 
y: d190 
=== Succesors ===
=== Usages ===
v107 v112 v183 d128 d123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d189 y: d190  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 12]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d105 
y: d106 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d105 y: d106  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:23) [bci: 25]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 v153 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 12]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
d190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v108 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:265) [bci: 15]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid d128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$13/1849350185@171770fc
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:265) [bci: 19]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d106 
y: d105 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d106 y: d105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:266) [bci: 23]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d128 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 29]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid d111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 30]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 32]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d106 
y: d111 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d106 y: d111  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 32]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v113 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:270) [bci: 35]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid d123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$7/170383657@12882a6b
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:270) [bci: 39]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d106 
y: d105 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d106 y: d105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:271) [bci: 43]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d123 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:274) [bci: 49]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:274) [bci: 51]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d106 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a188  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCompilationProfile.castArgumentsImpl(OptimizedCompilationProfile.java:263) [bci: 77]
at org.graalvm.compiler.truffle.runtime.OptimizedCompilationProfile.injectArgumentProfile(OptimizedCompilationProfile.java:249) [bci: 43]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:272) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
=== Succesors ===
next: d189 
=== Usages ===
v192 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v191 #next: d189  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a188 
=== Succesors ===
=== Usages ===
d189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d189 <|@
result v2|DOUBLE <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.doubleValue(Double.java:716) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.doubleValue(BoxingSnippets.java:127) [bci: 5]
at java.lang.Double.doubleValue() [bci: -1]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:21) [bci: 11]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
=== Succesors ===
next: d190 
=== Usages ===
d106 
=== Predecessor ===
a188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v192 #next: d190  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: TurtleImpl@1048281121
stableDimension: 0
stamp: a!# LkmLogo/interpreter/kmLogo/impl/TurtleImpl;
stampKind: a -
value: Object[TurtleImpl@1048281121]
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
result [v3|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a100 
index: - 
=== Succesors ===
=== Usages ===
d190 v181 v182 v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d190 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:263) [bci: 1]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
=== Succesors ===
next: v104 
=== Usages ===
d106 
=== Predecessor ===
d189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v193 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid d105 <|@
result double[360.0|0x4076800000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 8]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: 360.0
stableDimension: 0
stamp: f64! [360.0]
stampKind: f64
value: double[360.0|0x4076800000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 d123 d128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d106 <|@
result v4|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$7/170383657@12882a6b
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:263) [bci: 5]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d189 
y: d190 
=== Succesors ===
=== Usages ===
v107 v112 v183 d128 d123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d189 y: d190  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 12]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d105 
y: d106 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d105 y: d106  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:23) [bci: 25]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 v153 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:264) [bci: 12]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
d190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v108 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = VECTORLOAD [v1|DWORD[.] * 8 + 16] size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = VADDSD (x: v2|DOUBLE, y: [v3|QWORD[.] + 32]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v4|DOUBLE, y: v5|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:265) [bci: 15]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid d128 <|@
result v6|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$13/1849350185@171770fc
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:265) [bci: 19]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d106 
y: d105 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d106 y: d105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:266) [bci: 23]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d128 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = VSUBSD (x: v4|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v6|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 29]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid d111 <|@
result double[0.0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 30]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 32]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d106 
y: d111 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d106 y: d111  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:269) [bci: 32]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v113 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v4|DOUBLE, y: v8|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:270) [bci: 35]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid d123 <|@
result v9|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$7/170383657@12882a6b
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:270) [bci: 39]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: f64
=== Inputs ===
x: d106 
y: d105 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d106 y: d105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:271) [bci: 43]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d123 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VADDSD (x: v4|DOUBLE, y: v10|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v9|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:274) [bci: 49]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TurtleImpl.heading
nodeSourcePosition: at kmLogo.interpreter.kmLogo.impl.TurtleImpl.setHeading(TurtleImpl.java:65) [bci: 2]
at kmLogo.interpreter.kmLogo.impl.TurtleImpl.rotate(TurtleImpl.java:274) [bci: 51]
at kmLogo.interpreter.kmLogo.impl.TurtleRotateRootNode.execute(TurtleRotateRootNode.java:22) [bci: 20]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:285) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:274) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: d106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: d106 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:279) [bci: 52]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v4|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = VECTORLOAD [v1|DWORD[.] * 8 + 16] size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = VADDSD (x: v2|DOUBLE, y: [v3|QWORD[.] + 32]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v4|DOUBLE, y: v5|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v4|DOUBLE, y: v8|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v4|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = VSUBSD (x: v4|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v6|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VADDSD (x: v4|DOUBLE, y: v10|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction VECTORSTORE (address: [v3|QWORD[.] + 32], input: v9|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v11|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction xmm0|DOUBLE = VECTORLOAD [rax|DWORD[.] * 8 + 16] size: XMM op: VMOVSD <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121] <|@ <|@
      nr   14  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: [r10|QWORD[.] + 32]) size: XMM <|@ <|@
      nr   16  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   18  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   20  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   26  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   28  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   36  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   42  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   44  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   54  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   56  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction xmm0|DOUBLE = VECTORLOAD [rax|DWORD[.] * 8 + 16] size: XMM op: VMOVSD <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121] <|@ <|@
      nr   14  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: [r10|QWORD[.] + 32]) size: XMM <|@ <|@
      nr   16  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   18  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   20  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   26  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   28  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   36  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   42  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   44  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000] <|@ <|@
      nr   54  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   56  <|@ instruction VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f80000000000f1f4400008b4210c5fb1004c51000000049baaddeaddeaddeaddec4c17b584220c4c17b100d00000000c5f92ec10f872a000000c5f157c9c5f92ec17a060f8241000000c4c17b11422048b80000000000000000850500000000c5f877c3c4c17b100d00000000c5fb5cc1c4c17b11422048b80000000000000000850500000000c5f877c3c4c17b100d00000000c5fb58c1c4c17b11422048b80000000000000000850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f6db055f9e0, value=0x7f6d94047e60]:0x7f6d94047e60}  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 37 block B0 null  <||@
  Comment 37 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD  <||@
  Comment 37 8 rax|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 40 10 xmm0|DOUBLE = VECTORLOAD [rax|DWORD[.] * 8 + 16] size: XMM op: VMOVSD  <||@
  Comment 49 12 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121]  <||@
  Comment 49 {Object[TurtleImpl@1048281121]}  <||@
  Comment 59 14 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: [r10|QWORD[.] + 32]) size: XMM  <||@
  Comment 65 16 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 65 {DataSection[0x0]}  <||@
  Comment 74 18 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 78 20 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false  <||@
  Comment 84 block B2 null  <||@
  Comment 84 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 24 xmm1|DOUBLE = VMOVE input: double[0.0|0x0]  <||@
  Comment 88 26 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 92 28 FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false  <||@
  Comment 100 block B4 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 106 34 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 116 36 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 116 12  <||@
  Comment 126 block B1 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 126 {DataSection[0x0]}  <||@
  Comment 135 42 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 139 44 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 145 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 155 48 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 155 12  <||@
  Comment 165 block B3 null  <||@
  Comment 165 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 52 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 165 {DataSection[0x0]}  <||@
  Comment 174 54 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 178 56 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 184 58 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 194 60 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 194 12  <||@
  Comment 204 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f6d944523e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 204 4  <||@
  Comment 210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f6db055f9f0, value=0x7f6d94049500]:0x7f6d94049500}  <||@
  Comment 210 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f6d94832640 448b560849c1e203493bc20f850f5881ff900f1f80000000000f1f80000000000f1f4400008b4210c5fb1004c51000000049baa8957f7307000000c4c17b584220c4c17b100d96ffffffc5f92ec10f872a000000c5f157c9c5f92ec17a060f8241000000c4c17b11422048b8000000000000000085054c599b1cc5f877c3c4c17b100d59ffffffc5fb5cc1c4c17b11422048b80000000000000000850525599b1cc5f877c3c4c17b100d32ffffffc5fb58c1c4c17b11422048b800000000000000008505fe589b1cc5f877c3e8cffcc1ff90e8e96d81ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f6db055f9e0, value=0x7f6d94047e60]:0x7f6d94047e60}  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 37 block B0 null  <||@
  Comment 37 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3b7d65b0 slotKind: QWORD  <||@
  Comment 37 8 rax|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 40 10 xmm0|DOUBLE = VECTORLOAD [rax|DWORD[.] * 8 + 16] size: XMM op: VMOVSD  <||@
  Comment 49 12 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[TurtleImpl@1048281121]  <||@
  Comment 49 {Object[TurtleImpl@1048281121]}  <||@
  Comment 59 14 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: [r10|QWORD[.] + 32]) size: XMM  <||@
  Comment 65 16 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 65 {DataSection[0x0]}  <||@
  Comment 74 18 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 78 20 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 unorderedIsTrue: false  <||@
  Comment 84 block B2 null  <||@
  Comment 84 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 24 xmm1|DOUBLE = VMOVE input: double[0.0|0x0]  <||@
  Comment 88 26 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 92 28 FLOATBRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 unorderedIsTrue: false  <||@
  Comment 100 block B4 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 106 34 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 116 36 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 116 12  <||@
  Comment 126 block B1 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 126 {DataSection[0x0]}  <||@
  Comment 135 42 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 139 44 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 145 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 155 48 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 155 12  <||@
  Comment 165 block B3 null  <||@
  Comment 165 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 52 xmm1|DOUBLE = VMOVE input: double[360.0|0x4076800000000000]  <||@
  Comment 165 {DataSection[0x0]}  <||@
  Comment 174 54 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 178 56 VECTORSTORE (address: [r10|QWORD[.] + 32], input: xmm0|DOUBLE) size: XMM op: VMOVSD  <||@
  Comment 184 58 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 194 60 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@3e147173  <||@
  Comment 194 12  <||@
  Comment 204 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f6d944523e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 204 4  <||@
  Comment 210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f6db055f9f0, value=0x7f6d94049500]:0x7f6d94049500}  <||@
  Comment 210 5  <||@
  HexCodeFile>>> <|@
end_nmethod
