package org.eclipse.emf.ecoretools.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.emf.ecoretools.services.AleGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2017 Inria and Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Inria - initial API and implementation
 *
 * generated by Xtext 2.10.0
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalAleParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_IDENT", "RULE_INT", "RULE_MULTOP", "RULE_STRING", "RULE_REAL", "RULE_LETTER", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'behavior'", "';'", "'import'", "'as'", "'\\n;'", "'use'", "'open'", "'class'", "'extends'", "','", "'{'", "'}'", "'def'", "'override'", "'('", "')'", "'@'", "'contains'", "'unique'", "':='", "'..'", "'opposite'", "'+='", "'-='", "'for'", "'in'", "'['", "']'", "'if'", "'else'", "'while'", "'.'", "'->'", "':'", "'|'", "'and'", "'or'", "'xor'", "'implie'", "'not'", "'-'", "'then'", "'endif'", "'let'", "'='", "'+'", "'<='", "'>='", "'!='", "'<>'", "'=='", "'<'", "'>'", "'select'", "'reject'", "'collect'", "'any'", "'exists'", "'forAll'", "'isUnique'", "'one'", "'sortedBy'", "'closure'", "'true'", "'false'", "'null'", "'Sequence{'", "'OrderedSet{'", "'String'", "'Integer'", "'Real'", "'Boolean'", "'Sequence('", "'OrderedSet('", "'::'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=10;
    public static final int RULE_REAL=8;
    public static final int RULE_IDENT=4;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=7;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__78=78;
    public static final int T__35=35;
    public static final int T__79=79;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int RULE_LETTER=9;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__88=88;
    public static final int RULE_MULTOP=6;
    public static final int T__45=45;
    public static final int T__89=89;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__84=84;
    public static final int T__41=41;
    public static final int T__85=85;
    public static final int T__42=42;
    public static final int T__86=86;
    public static final int T__43=43;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalAleParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAleParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAleParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAle.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AleGrammarAccess grammarAccess;

        public InternalAleParser(TokenStream input, AleGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "rRoot";
       	}

       	@Override
       	protected AleGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRulerRoot"
    // InternalAle.g:79:1: entryRulerRoot returns [EObject current=null] : iv_rulerRoot= rulerRoot EOF ;
    public final EObject entryRulerRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerRoot = null;


        try {
            // InternalAle.g:79:46: (iv_rulerRoot= rulerRoot EOF )
            // InternalAle.g:80:2: iv_rulerRoot= rulerRoot EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRRootRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerRoot=rulerRoot();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerRoot; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerRoot"


    // $ANTLR start "rulerRoot"
    // InternalAle.g:86:1: rulerRoot returns [EObject current=null] : (otherlv_0= 'behavior' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ( (lv_imports_3_0= rulerImport ) )* ( (lv_services_4_0= rulerService ) )* ( (lv_xtendedClasses_5_0= rulerClass ) )* ) ;
    public final EObject rulerRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_imports_3_0 = null;

        EObject lv_services_4_0 = null;

        EObject lv_xtendedClasses_5_0 = null;



        	enterRule();

        try {
            // InternalAle.g:92:2: ( (otherlv_0= 'behavior' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ( (lv_imports_3_0= rulerImport ) )* ( (lv_services_4_0= rulerService ) )* ( (lv_xtendedClasses_5_0= rulerClass ) )* ) )
            // InternalAle.g:93:2: (otherlv_0= 'behavior' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ( (lv_imports_3_0= rulerImport ) )* ( (lv_services_4_0= rulerService ) )* ( (lv_xtendedClasses_5_0= rulerClass ) )* )
            {
            // InternalAle.g:93:2: (otherlv_0= 'behavior' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ( (lv_imports_3_0= rulerImport ) )* ( (lv_services_4_0= rulerService ) )* ( (lv_xtendedClasses_5_0= rulerClass ) )* )
            // InternalAle.g:94:3: otherlv_0= 'behavior' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ( (lv_imports_3_0= rulerImport ) )* ( (lv_services_4_0= rulerService ) )* ( (lv_xtendedClasses_5_0= rulerClass ) )*
            {
            otherlv_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRRootAccess().getBehaviorKeyword_0());
              		
            }
            // InternalAle.g:98:3: ( (lv_name_1_0= rulerQualified ) )
            // InternalAle.g:99:4: (lv_name_1_0= rulerQualified )
            {
            // InternalAle.g:99:4: (lv_name_1_0= rulerQualified )
            // InternalAle.g:100:5: lv_name_1_0= rulerQualified
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRRootAccess().getNameRQualifiedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_name_1_0=rulerQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRRootRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.rQualified");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRRootAccess().getSemicolonKeyword_2());
              		
            }
            // InternalAle.g:121:3: ( (lv_imports_3_0= rulerImport ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==17) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalAle.g:122:4: (lv_imports_3_0= rulerImport )
            	    {
            	    // InternalAle.g:122:4: (lv_imports_3_0= rulerImport )
            	    // InternalAle.g:123:5: lv_imports_3_0= rulerImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRRootAccess().getImportsRImportParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_imports_3_0=rulerImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRRootRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_3_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalAle.g:140:3: ( (lv_services_4_0= rulerService ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==20) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalAle.g:141:4: (lv_services_4_0= rulerService )
            	    {
            	    // InternalAle.g:141:4: (lv_services_4_0= rulerService )
            	    // InternalAle.g:142:5: lv_services_4_0= rulerService
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRRootAccess().getServicesRServiceParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_services_4_0=rulerService();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRRootRule());
            	      					}
            	      					add(
            	      						current,
            	      						"services",
            	      						lv_services_4_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rService");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalAle.g:159:3: ( (lv_xtendedClasses_5_0= rulerClass ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( ((LA3_0>=21 && LA3_0<=22)) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalAle.g:160:4: (lv_xtendedClasses_5_0= rulerClass )
            	    {
            	    // InternalAle.g:160:4: (lv_xtendedClasses_5_0= rulerClass )
            	    // InternalAle.g:161:5: lv_xtendedClasses_5_0= rulerClass
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRRootAccess().getXtendedClassesRClassParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_xtendedClasses_5_0=rulerClass();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRRootRule());
            	      					}
            	      					add(
            	      						current,
            	      						"xtendedClasses",
            	      						lv_xtendedClasses_5_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rClass");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerRoot"


    // $ANTLR start "entryRulerImport"
    // InternalAle.g:182:1: entryRulerImport returns [EObject current=null] : iv_rulerImport= rulerImport EOF ;
    public final EObject entryRulerImport() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerImport = null;


        try {
            // InternalAle.g:182:48: (iv_rulerImport= rulerImport EOF )
            // InternalAle.g:183:2: iv_rulerImport= rulerImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerImport=rulerImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerImport"


    // $ANTLR start "rulerImport"
    // InternalAle.g:189:1: rulerImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= 'as' ( (lv_alias_3_0= RULE_IDENT ) ) otherlv_4= '\\n;' ) ;
    public final EObject rulerImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalAle.g:195:2: ( (otherlv_0= 'import' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= 'as' ( (lv_alias_3_0= RULE_IDENT ) ) otherlv_4= '\\n;' ) )
            // InternalAle.g:196:2: (otherlv_0= 'import' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= 'as' ( (lv_alias_3_0= RULE_IDENT ) ) otherlv_4= '\\n;' )
            {
            // InternalAle.g:196:2: (otherlv_0= 'import' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= 'as' ( (lv_alias_3_0= RULE_IDENT ) ) otherlv_4= '\\n;' )
            // InternalAle.g:197:3: otherlv_0= 'import' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= 'as' ( (lv_alias_3_0= RULE_IDENT ) ) otherlv_4= '\\n;'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRImportAccess().getImportKeyword_0());
              		
            }
            // InternalAle.g:201:3: ( (lv_name_1_0= rulerQualified ) )
            // InternalAle.g:202:4: (lv_name_1_0= rulerQualified )
            {
            // InternalAle.g:202:4: (lv_name_1_0= rulerQualified )
            // InternalAle.g:203:5: lv_name_1_0= rulerQualified
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRImportAccess().getNameRQualifiedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_name_1_0=rulerQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.rQualified");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRImportAccess().getAsKeyword_2());
              		
            }
            // InternalAle.g:224:3: ( (lv_alias_3_0= RULE_IDENT ) )
            // InternalAle.g:225:4: (lv_alias_3_0= RULE_IDENT )
            {
            // InternalAle.g:225:4: (lv_alias_3_0= RULE_IDENT )
            // InternalAle.g:226:5: lv_alias_3_0= RULE_IDENT
            {
            lv_alias_3_0=(Token)match(input,RULE_IDENT,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_alias_3_0, grammarAccess.getRImportAccess().getAliasIdentTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"alias",
              						lv_alias_3_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRImportAccess().getControl000aSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerImport"


    // $ANTLR start "entryRulerService"
    // InternalAle.g:250:1: entryRulerService returns [EObject current=null] : iv_rulerService= rulerService EOF ;
    public final EObject entryRulerService() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerService = null;


        try {
            // InternalAle.g:250:49: (iv_rulerService= rulerService EOF )
            // InternalAle.g:251:2: iv_rulerService= rulerService EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRServiceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerService=rulerService();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerService; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerService"


    // $ANTLR start "rulerService"
    // InternalAle.g:257:1: rulerService returns [EObject current=null] : (otherlv_0= 'use' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ) ;
    public final EObject rulerService() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalAle.g:263:2: ( (otherlv_0= 'use' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' ) )
            // InternalAle.g:264:2: (otherlv_0= 'use' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' )
            {
            // InternalAle.g:264:2: (otherlv_0= 'use' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';' )
            // InternalAle.g:265:3: otherlv_0= 'use' ( (lv_name_1_0= rulerQualified ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRServiceAccess().getUseKeyword_0());
              		
            }
            // InternalAle.g:269:3: ( (lv_name_1_0= rulerQualified ) )
            // InternalAle.g:270:4: (lv_name_1_0= rulerQualified )
            {
            // InternalAle.g:270:4: (lv_name_1_0= rulerQualified )
            // InternalAle.g:271:5: lv_name_1_0= rulerQualified
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRServiceAccess().getNameRQualifiedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_name_1_0=rulerQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRServiceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.rQualified");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRServiceAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerService"


    // $ANTLR start "entryRulerClass"
    // InternalAle.g:296:1: entryRulerClass returns [EObject current=null] : iv_rulerClass= rulerClass EOF ;
    public final EObject entryRulerClass() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerClass = null;


        try {
            // InternalAle.g:296:47: (iv_rulerClass= rulerClass EOF )
            // InternalAle.g:297:2: iv_rulerClass= rulerClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerClass=rulerClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerClass"


    // $ANTLR start "rulerClass"
    // InternalAle.g:303:1: rulerClass returns [EObject current=null] : (this_rOpenClass_0= rulerOpenClass | this_rNewClass_1= rulerNewClass ) ;
    public final EObject rulerClass() throws RecognitionException {
        EObject current = null;

        EObject this_rOpenClass_0 = null;

        EObject this_rNewClass_1 = null;



        	enterRule();

        try {
            // InternalAle.g:309:2: ( (this_rOpenClass_0= rulerOpenClass | this_rNewClass_1= rulerNewClass ) )
            // InternalAle.g:310:2: (this_rOpenClass_0= rulerOpenClass | this_rNewClass_1= rulerNewClass )
            {
            // InternalAle.g:310:2: (this_rOpenClass_0= rulerOpenClass | this_rNewClass_1= rulerNewClass )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==21) ) {
                alt4=1;
            }
            else if ( (LA4_0==22) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalAle.g:311:3: this_rOpenClass_0= rulerOpenClass
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRClassAccess().getROpenClassParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rOpenClass_0=rulerOpenClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rOpenClass_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:323:3: this_rNewClass_1= rulerNewClass
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRClassAccess().getRNewClassParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rNewClass_1=rulerNewClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rNewClass_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerClass"


    // $ANTLR start "entryRulerOpenClass"
    // InternalAle.g:338:1: entryRulerOpenClass returns [EObject current=null] : iv_rulerOpenClass= rulerOpenClass EOF ;
    public final EObject entryRulerOpenClass() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerOpenClass = null;


        try {
            // InternalAle.g:338:51: (iv_rulerOpenClass= rulerOpenClass EOF )
            // InternalAle.g:339:2: iv_rulerOpenClass= rulerOpenClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getROpenClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerOpenClass=rulerOpenClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerOpenClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerOpenClass"


    // $ANTLR start "rulerOpenClass"
    // InternalAle.g:345:1: rulerOpenClass returns [EObject current=null] : (otherlv_0= 'open' otherlv_1= 'class' ( (lv_name_2_0= rulerQualified ) ) (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )? otherlv_7= '{' ( (lv_attributes_8_0= rulerAttribute ) )* ( (lv_operations_9_0= rulerOperation ) )* otherlv_10= '}' ) ;
    public final EObject rulerOpenClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_extends_4_0 = null;

        AntlrDatatypeRuleToken lv_extends_6_0 = null;

        EObject lv_attributes_8_0 = null;

        EObject lv_operations_9_0 = null;



        	enterRule();

        try {
            // InternalAle.g:351:2: ( (otherlv_0= 'open' otherlv_1= 'class' ( (lv_name_2_0= rulerQualified ) ) (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )? otherlv_7= '{' ( (lv_attributes_8_0= rulerAttribute ) )* ( (lv_operations_9_0= rulerOperation ) )* otherlv_10= '}' ) )
            // InternalAle.g:352:2: (otherlv_0= 'open' otherlv_1= 'class' ( (lv_name_2_0= rulerQualified ) ) (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )? otherlv_7= '{' ( (lv_attributes_8_0= rulerAttribute ) )* ( (lv_operations_9_0= rulerOperation ) )* otherlv_10= '}' )
            {
            // InternalAle.g:352:2: (otherlv_0= 'open' otherlv_1= 'class' ( (lv_name_2_0= rulerQualified ) ) (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )? otherlv_7= '{' ( (lv_attributes_8_0= rulerAttribute ) )* ( (lv_operations_9_0= rulerOperation ) )* otherlv_10= '}' )
            // InternalAle.g:353:3: otherlv_0= 'open' otherlv_1= 'class' ( (lv_name_2_0= rulerQualified ) ) (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )? otherlv_7= '{' ( (lv_attributes_8_0= rulerAttribute ) )* ( (lv_operations_9_0= rulerOperation ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,21,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getROpenClassAccess().getOpenKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getROpenClassAccess().getClassKeyword_1());
              		
            }
            // InternalAle.g:361:3: ( (lv_name_2_0= rulerQualified ) )
            // InternalAle.g:362:4: (lv_name_2_0= rulerQualified )
            {
            // InternalAle.g:362:4: (lv_name_2_0= rulerQualified )
            // InternalAle.g:363:5: lv_name_2_0= rulerQualified
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getROpenClassAccess().getNameRQualifiedParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_name_2_0=rulerQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getROpenClassRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.emf.ecoretools.Ale.rQualified");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:380:3: (otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==23) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalAle.g:381:4: otherlv_3= 'extends' ( (lv_extends_4_0= rulerQualified ) ) (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )*
                    {
                    otherlv_3=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getROpenClassAccess().getExtendsKeyword_3_0());
                      			
                    }
                    // InternalAle.g:385:4: ( (lv_extends_4_0= rulerQualified ) )
                    // InternalAle.g:386:5: (lv_extends_4_0= rulerQualified )
                    {
                    // InternalAle.g:386:5: (lv_extends_4_0= rulerQualified )
                    // InternalAle.g:387:6: lv_extends_4_0= rulerQualified
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_extends_4_0=rulerQualified();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getROpenClassRule());
                      						}
                      						add(
                      							current,
                      							"extends",
                      							lv_extends_4_0,
                      							"org.eclipse.emf.ecoretools.Ale.rQualified");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAle.g:404:4: (otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==24) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalAle.g:405:5: otherlv_5= ',' ( (lv_extends_6_0= rulerQualified ) )
                    	    {
                    	    otherlv_5=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getROpenClassAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalAle.g:409:5: ( (lv_extends_6_0= rulerQualified ) )
                    	    // InternalAle.g:410:6: (lv_extends_6_0= rulerQualified )
                    	    {
                    	    // InternalAle.g:410:6: (lv_extends_6_0= rulerQualified )
                    	    // InternalAle.g:411:7: lv_extends_6_0= rulerQualified
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_extends_6_0=rulerQualified();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getROpenClassRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"extends",
                    	      								lv_extends_6_0,
                    	      								"org.eclipse.emf.ecoretools.Ale.rQualified");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,25,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getROpenClassAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalAle.g:434:3: ( (lv_attributes_8_0= rulerAttribute ) )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( ((LA7_0>=RULE_IDENT && LA7_0<=RULE_INT)||LA7_0==25||(LA7_0>=32 && LA7_0<=33)||LA7_0==36||(LA7_0>=83 && LA7_0<=88)) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalAle.g:435:4: (lv_attributes_8_0= rulerAttribute )
            	    {
            	    // InternalAle.g:435:4: (lv_attributes_8_0= rulerAttribute )
            	    // InternalAle.g:436:5: lv_attributes_8_0= rulerAttribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getROpenClassAccess().getAttributesRAttributeParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_attributes_8_0=rulerAttribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getROpenClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_8_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rAttribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            // InternalAle.g:453:3: ( (lv_operations_9_0= rulerOperation ) )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( ((LA8_0>=27 && LA8_0<=28)||LA8_0==31) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // InternalAle.g:454:4: (lv_operations_9_0= rulerOperation )
            	    {
            	    // InternalAle.g:454:4: (lv_operations_9_0= rulerOperation )
            	    // InternalAle.g:455:5: lv_operations_9_0= rulerOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getROpenClassAccess().getOperationsROperationParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_operations_9_0=rulerOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getROpenClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"operations",
            	      						lv_operations_9_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rOperation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getROpenClassAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerOpenClass"


    // $ANTLR start "entryRulerNewClass"
    // InternalAle.g:480:1: entryRulerNewClass returns [EObject current=null] : iv_rulerNewClass= rulerNewClass EOF ;
    public final EObject entryRulerNewClass() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerNewClass = null;


        try {
            // InternalAle.g:480:50: (iv_rulerNewClass= rulerNewClass EOF )
            // InternalAle.g:481:2: iv_rulerNewClass= rulerNewClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRNewClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerNewClass=rulerNewClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerNewClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerNewClass"


    // $ANTLR start "rulerNewClass"
    // InternalAle.g:487:1: rulerNewClass returns [EObject current=null] : (otherlv_0= 'class' ( (lv_name_1_0= RULE_IDENT ) ) otherlv_2= '{' ( (lv_attributes_3_0= rulerAttribute ) )* ( (lv_operations_4_0= rulerOperation ) )* otherlv_5= '}' ) ;
    public final EObject rulerNewClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_attributes_3_0 = null;

        EObject lv_operations_4_0 = null;



        	enterRule();

        try {
            // InternalAle.g:493:2: ( (otherlv_0= 'class' ( (lv_name_1_0= RULE_IDENT ) ) otherlv_2= '{' ( (lv_attributes_3_0= rulerAttribute ) )* ( (lv_operations_4_0= rulerOperation ) )* otherlv_5= '}' ) )
            // InternalAle.g:494:2: (otherlv_0= 'class' ( (lv_name_1_0= RULE_IDENT ) ) otherlv_2= '{' ( (lv_attributes_3_0= rulerAttribute ) )* ( (lv_operations_4_0= rulerOperation ) )* otherlv_5= '}' )
            {
            // InternalAle.g:494:2: (otherlv_0= 'class' ( (lv_name_1_0= RULE_IDENT ) ) otherlv_2= '{' ( (lv_attributes_3_0= rulerAttribute ) )* ( (lv_operations_4_0= rulerOperation ) )* otherlv_5= '}' )
            // InternalAle.g:495:3: otherlv_0= 'class' ( (lv_name_1_0= RULE_IDENT ) ) otherlv_2= '{' ( (lv_attributes_3_0= rulerAttribute ) )* ( (lv_operations_4_0= rulerOperation ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRNewClassAccess().getClassKeyword_0());
              		
            }
            // InternalAle.g:499:3: ( (lv_name_1_0= RULE_IDENT ) )
            // InternalAle.g:500:4: (lv_name_1_0= RULE_IDENT )
            {
            // InternalAle.g:500:4: (lv_name_1_0= RULE_IDENT )
            // InternalAle.g:501:5: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRNewClassAccess().getNameIdentTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRNewClassRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRNewClassAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalAle.g:521:3: ( (lv_attributes_3_0= rulerAttribute ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( ((LA9_0>=RULE_IDENT && LA9_0<=RULE_INT)||LA9_0==25||(LA9_0>=32 && LA9_0<=33)||LA9_0==36||(LA9_0>=83 && LA9_0<=88)) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalAle.g:522:4: (lv_attributes_3_0= rulerAttribute )
            	    {
            	    // InternalAle.g:522:4: (lv_attributes_3_0= rulerAttribute )
            	    // InternalAle.g:523:5: lv_attributes_3_0= rulerAttribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRNewClassAccess().getAttributesRAttributeParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_attributes_3_0=rulerAttribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRNewClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_3_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rAttribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalAle.g:540:3: ( (lv_operations_4_0= rulerOperation ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( ((LA10_0>=27 && LA10_0<=28)||LA10_0==31) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalAle.g:541:4: (lv_operations_4_0= rulerOperation )
            	    {
            	    // InternalAle.g:541:4: (lv_operations_4_0= rulerOperation )
            	    // InternalAle.g:542:5: lv_operations_4_0= rulerOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRNewClassAccess().getOperationsROperationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_operations_4_0=rulerOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRNewClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"operations",
            	      						lv_operations_4_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rOperation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            otherlv_5=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getRNewClassAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerNewClass"


    // $ANTLR start "entryRulerOperation"
    // InternalAle.g:567:1: entryRulerOperation returns [EObject current=null] : iv_rulerOperation= rulerOperation EOF ;
    public final EObject entryRulerOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerOperation = null;


        try {
            // InternalAle.g:567:51: (iv_rulerOperation= rulerOperation EOF )
            // InternalAle.g:568:2: iv_rulerOperation= rulerOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getROperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerOperation=rulerOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerOperation"


    // $ANTLR start "rulerOperation"
    // InternalAle.g:574:1: rulerOperation returns [EObject current=null] : ( ( (lv_tag_0_0= rulerTag ) )* (otherlv_1= 'def' | otherlv_2= 'override' ) ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) otherlv_5= '(' ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )? otherlv_9= ')' ( (lv_body_10_0= rulerBlock ) ) ) ;
    public final EObject rulerOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_tag_0_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_params_6_0 = null;

        EObject lv_params_8_0 = null;

        EObject lv_body_10_0 = null;



        	enterRule();

        try {
            // InternalAle.g:580:2: ( ( ( (lv_tag_0_0= rulerTag ) )* (otherlv_1= 'def' | otherlv_2= 'override' ) ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) otherlv_5= '(' ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )? otherlv_9= ')' ( (lv_body_10_0= rulerBlock ) ) ) )
            // InternalAle.g:581:2: ( ( (lv_tag_0_0= rulerTag ) )* (otherlv_1= 'def' | otherlv_2= 'override' ) ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) otherlv_5= '(' ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )? otherlv_9= ')' ( (lv_body_10_0= rulerBlock ) ) )
            {
            // InternalAle.g:581:2: ( ( (lv_tag_0_0= rulerTag ) )* (otherlv_1= 'def' | otherlv_2= 'override' ) ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) otherlv_5= '(' ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )? otherlv_9= ')' ( (lv_body_10_0= rulerBlock ) ) )
            // InternalAle.g:582:3: ( (lv_tag_0_0= rulerTag ) )* (otherlv_1= 'def' | otherlv_2= 'override' ) ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) otherlv_5= '(' ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )? otherlv_9= ')' ( (lv_body_10_0= rulerBlock ) )
            {
            // InternalAle.g:582:3: ( (lv_tag_0_0= rulerTag ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==31) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalAle.g:583:4: (lv_tag_0_0= rulerTag )
            	    {
            	    // InternalAle.g:583:4: (lv_tag_0_0= rulerTag )
            	    // InternalAle.g:584:5: lv_tag_0_0= rulerTag
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getROperationAccess().getTagRTagParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_tag_0_0=rulerTag();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getROperationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"tag",
            	      						lv_tag_0_0,
            	      						"org.eclipse.emf.ecoretools.Ale.rTag");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // InternalAle.g:601:3: (otherlv_1= 'def' | otherlv_2= 'override' )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==27) ) {
                alt12=1;
            }
            else if ( (LA12_0==28) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalAle.g:602:4: otherlv_1= 'def'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getROperationAccess().getDefKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:607:4: otherlv_2= 'override'
                    {
                    otherlv_2=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getROperationAccess().getOverrideKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAle.g:612:3: ( (lv_type_3_0= rulerType ) )
            // InternalAle.g:613:4: (lv_type_3_0= rulerType )
            {
            // InternalAle.g:613:4: (lv_type_3_0= rulerType )
            // InternalAle.g:614:5: lv_type_3_0= rulerType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getROperationAccess().getTypeRTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_3_0=rulerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getROperationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"org.eclipse.emf.ecoretools.Ale.rType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:631:3: ( (lv_name_4_0= RULE_IDENT ) )
            // InternalAle.g:632:4: (lv_name_4_0= RULE_IDENT )
            {
            // InternalAle.g:632:4: (lv_name_4_0= RULE_IDENT )
            // InternalAle.g:633:5: lv_name_4_0= RULE_IDENT
            {
            lv_name_4_0=(Token)match(input,RULE_IDENT,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getROperationAccess().getNameIdentTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getROperationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,29,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getROperationAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalAle.g:653:3: ( ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )* )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_IDENT||LA14_0==25||(LA14_0>=83 && LA14_0<=88)) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalAle.g:654:4: ( (lv_params_6_0= rulerVariable ) ) (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )*
                    {
                    // InternalAle.g:654:4: ( (lv_params_6_0= rulerVariable ) )
                    // InternalAle.g:655:5: (lv_params_6_0= rulerVariable )
                    {
                    // InternalAle.g:655:5: (lv_params_6_0= rulerVariable )
                    // InternalAle.g:656:6: lv_params_6_0= rulerVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_params_6_0=rulerVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getROperationRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_6_0,
                      							"org.eclipse.emf.ecoretools.Ale.rVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAle.g:673:4: (otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==24) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalAle.g:674:5: otherlv_7= ',' ( (lv_params_8_0= rulerVariable ) )
                    	    {
                    	    otherlv_7=(Token)match(input,24,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getROperationAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalAle.g:678:5: ( (lv_params_8_0= rulerVariable ) )
                    	    // InternalAle.g:679:6: (lv_params_8_0= rulerVariable )
                    	    {
                    	    // InternalAle.g:679:6: (lv_params_8_0= rulerVariable )
                    	    // InternalAle.g:680:7: lv_params_8_0= rulerVariable
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_20);
                    	    lv_params_8_0=rulerVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getROperationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_8_0,
                    	      								"org.eclipse.emf.ecoretools.Ale.rVariable");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getROperationAccess().getRightParenthesisKeyword_6());
              		
            }
            // InternalAle.g:703:3: ( (lv_body_10_0= rulerBlock ) )
            // InternalAle.g:704:4: (lv_body_10_0= rulerBlock )
            {
            // InternalAle.g:704:4: (lv_body_10_0= rulerBlock )
            // InternalAle.g:705:5: lv_body_10_0= rulerBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getROperationAccess().getBodyRBlockParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_10_0=rulerBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getROperationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.eclipse.emf.ecoretools.Ale.rBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerOperation"


    // $ANTLR start "entryRulerTag"
    // InternalAle.g:726:1: entryRulerTag returns [EObject current=null] : iv_rulerTag= rulerTag EOF ;
    public final EObject entryRulerTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerTag = null;


        try {
            // InternalAle.g:726:45: (iv_rulerTag= rulerTag EOF )
            // InternalAle.g:727:2: iv_rulerTag= rulerTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerTag=rulerTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerTag; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerTag"


    // $ANTLR start "rulerTag"
    // InternalAle.g:733:1: rulerTag returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= RULE_IDENT ) ) ) ;
    public final EObject rulerTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAle.g:739:2: ( (otherlv_0= '@' ( (lv_name_1_0= RULE_IDENT ) ) ) )
            // InternalAle.g:740:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_IDENT ) ) )
            {
            // InternalAle.g:740:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_IDENT ) ) )
            // InternalAle.g:741:3: otherlv_0= '@' ( (lv_name_1_0= RULE_IDENT ) )
            {
            otherlv_0=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRTagAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalAle.g:745:3: ( (lv_name_1_0= RULE_IDENT ) )
            // InternalAle.g:746:4: (lv_name_1_0= RULE_IDENT )
            {
            // InternalAle.g:746:4: (lv_name_1_0= RULE_IDENT )
            // InternalAle.g:747:5: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRTagAccess().getNameIdentTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRTagRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerTag"


    // $ANTLR start "entryRulerVariable"
    // InternalAle.g:767:1: entryRulerVariable returns [EObject current=null] : iv_rulerVariable= rulerVariable EOF ;
    public final EObject entryRulerVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerVariable = null;


        try {
            // InternalAle.g:767:50: (iv_rulerVariable= rulerVariable EOF )
            // InternalAle.g:768:2: iv_rulerVariable= rulerVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerVariable=rulerVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerVariable"


    // $ANTLR start "rulerVariable"
    // InternalAle.g:774:1: rulerVariable returns [EObject current=null] : ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) ) ;
    public final EObject rulerVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalAle.g:780:2: ( ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) ) )
            // InternalAle.g:781:2: ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) )
            {
            // InternalAle.g:781:2: ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) )
            // InternalAle.g:782:3: ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) )
            {
            // InternalAle.g:782:3: ( (lv_type_0_0= rulerType ) )
            // InternalAle.g:783:4: (lv_type_0_0= rulerType )
            {
            // InternalAle.g:783:4: (lv_type_0_0= rulerType )
            // InternalAle.g:784:5: lv_type_0_0= rulerType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRVariableAccess().getTypeRTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_0_0=rulerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRVariableRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.eclipse.emf.ecoretools.Ale.rType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:801:3: ( (lv_name_1_0= RULE_IDENT ) )
            // InternalAle.g:802:4: (lv_name_1_0= RULE_IDENT )
            {
            // InternalAle.g:802:4: (lv_name_1_0= RULE_IDENT )
            // InternalAle.g:803:5: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRVariableAccess().getNameIdentTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRVariableRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerVariable"


    // $ANTLR start "entryRulerAttribute"
    // InternalAle.g:823:1: entryRulerAttribute returns [EObject current=null] : iv_rulerAttribute= rulerAttribute EOF ;
    public final EObject entryRulerAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerAttribute = null;


        try {
            // InternalAle.g:823:51: (iv_rulerAttribute= rulerAttribute EOF )
            // InternalAle.g:824:2: iv_rulerAttribute= rulerAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerAttribute=rulerAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerAttribute"


    // $ANTLR start "rulerAttribute"
    // InternalAle.g:830:1: rulerAttribute returns [EObject current=null] : ( ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )? ( (lv_bounds_1_0= rulerCardinality ) )? ( (lv_opposite_2_0= rulerOpposite ) )? ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )? otherlv_7= ';' ) ;
    public final EObject rulerAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_modifier_0_1=null;
        Token lv_modifier_0_2=null;
        Token lv_name_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_bounds_1_0 = null;

        EObject lv_opposite_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_exp_6_0 = null;



        	enterRule();

        try {
            // InternalAle.g:836:2: ( ( ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )? ( (lv_bounds_1_0= rulerCardinality ) )? ( (lv_opposite_2_0= rulerOpposite ) )? ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )? otherlv_7= ';' ) )
            // InternalAle.g:837:2: ( ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )? ( (lv_bounds_1_0= rulerCardinality ) )? ( (lv_opposite_2_0= rulerOpposite ) )? ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )? otherlv_7= ';' )
            {
            // InternalAle.g:837:2: ( ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )? ( (lv_bounds_1_0= rulerCardinality ) )? ( (lv_opposite_2_0= rulerOpposite ) )? ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )? otherlv_7= ';' )
            // InternalAle.g:838:3: ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )? ( (lv_bounds_1_0= rulerCardinality ) )? ( (lv_opposite_2_0= rulerOpposite ) )? ( (lv_type_3_0= rulerType ) ) ( (lv_name_4_0= RULE_IDENT ) ) (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )? otherlv_7= ';'
            {
            // InternalAle.g:838:3: ( ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=32 && LA16_0<=33)) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalAle.g:839:4: ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) )
                    {
                    // InternalAle.g:839:4: ( (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' ) )
                    // InternalAle.g:840:5: (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' )
                    {
                    // InternalAle.g:840:5: (lv_modifier_0_1= 'contains' | lv_modifier_0_2= 'unique' )
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==32) ) {
                        alt15=1;
                    }
                    else if ( (LA15_0==33) ) {
                        alt15=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 0, input);

                        throw nvae;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalAle.g:841:6: lv_modifier_0_1= 'contains'
                            {
                            lv_modifier_0_1=(Token)match(input,32,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modifier_0_1, grammarAccess.getRAttributeAccess().getModifierContainsKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getRAttributeRule());
                              						}
                              						setWithLastConsumed(current, "modifier", lv_modifier_0_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAle.g:852:6: lv_modifier_0_2= 'unique'
                            {
                            lv_modifier_0_2=(Token)match(input,33,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modifier_0_2, grammarAccess.getRAttributeAccess().getModifierUniqueKeyword_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getRAttributeRule());
                              						}
                              						setWithLastConsumed(current, "modifier", lv_modifier_0_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalAle.g:865:3: ( (lv_bounds_1_0= rulerCardinality ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalAle.g:866:4: (lv_bounds_1_0= rulerCardinality )
                    {
                    // InternalAle.g:866:4: (lv_bounds_1_0= rulerCardinality )
                    // InternalAle.g:867:5: lv_bounds_1_0= rulerCardinality
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRAttributeAccess().getBoundsRCardinalityParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_17);
                    lv_bounds_1_0=rulerCardinality();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRAttributeRule());
                      					}
                      					set(
                      						current,
                      						"bounds",
                      						lv_bounds_1_0,
                      						"org.eclipse.emf.ecoretools.Ale.rCardinality");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAle.g:884:3: ( (lv_opposite_2_0= rulerOpposite ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==36) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalAle.g:885:4: (lv_opposite_2_0= rulerOpposite )
                    {
                    // InternalAle.g:885:4: (lv_opposite_2_0= rulerOpposite )
                    // InternalAle.g:886:5: lv_opposite_2_0= rulerOpposite
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRAttributeAccess().getOppositeROppositeParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_17);
                    lv_opposite_2_0=rulerOpposite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRAttributeRule());
                      					}
                      					set(
                      						current,
                      						"opposite",
                      						lv_opposite_2_0,
                      						"org.eclipse.emf.ecoretools.Ale.rOpposite");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAle.g:903:3: ( (lv_type_3_0= rulerType ) )
            // InternalAle.g:904:4: (lv_type_3_0= rulerType )
            {
            // InternalAle.g:904:4: (lv_type_3_0= rulerType )
            // InternalAle.g:905:5: lv_type_3_0= rulerType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRAttributeAccess().getTypeRTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_3_0=rulerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRAttributeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"org.eclipse.emf.ecoretools.Ale.rType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:922:3: ( (lv_name_4_0= RULE_IDENT ) )
            // InternalAle.g:923:4: (lv_name_4_0= RULE_IDENT )
            {
            // InternalAle.g:923:4: (lv_name_4_0= RULE_IDENT )
            // InternalAle.g:924:5: lv_name_4_0= RULE_IDENT
            {
            lv_name_4_0=(Token)match(input,RULE_IDENT,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getRAttributeAccess().getNameIdentTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRAttributeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            // InternalAle.g:940:3: (otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==34) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalAle.g:941:4: otherlv_5= ':=' ( (lv_exp_6_0= ruleexpression ) )
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRAttributeAccess().getColonEqualsSignKeyword_5_0());
                      			
                    }
                    // InternalAle.g:945:4: ( (lv_exp_6_0= ruleexpression ) )
                    // InternalAle.g:946:5: (lv_exp_6_0= ruleexpression )
                    {
                    // InternalAle.g:946:5: (lv_exp_6_0= ruleexpression )
                    // InternalAle.g:947:6: lv_exp_6_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRAttributeAccess().getExpExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_exp_6_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRAttributeRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_6_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getRAttributeAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerAttribute"


    // $ANTLR start "entryRulerCardinality"
    // InternalAle.g:973:1: entryRulerCardinality returns [String current=null] : iv_rulerCardinality= rulerCardinality EOF ;
    public final String entryRulerCardinality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulerCardinality = null;


        try {
            // InternalAle.g:973:52: (iv_rulerCardinality= rulerCardinality EOF )
            // InternalAle.g:974:2: iv_rulerCardinality= rulerCardinality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRCardinalityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerCardinality=rulerCardinality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerCardinality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerCardinality"


    // $ANTLR start "rulerCardinality"
    // InternalAle.g:980:1: rulerCardinality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT kw= '..' (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP ) ) ;
    public final AntlrDatatypeRuleToken rulerCardinality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_MultOp_3=null;


        	enterRule();

        try {
            // InternalAle.g:986:2: ( (this_INT_0= RULE_INT kw= '..' (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP ) ) )
            // InternalAle.g:987:2: (this_INT_0= RULE_INT kw= '..' (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP ) )
            {
            // InternalAle.g:987:2: (this_INT_0= RULE_INT kw= '..' (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP ) )
            // InternalAle.g:988:3: this_INT_0= RULE_INT kw= '..' (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP )
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_0());
              		
            }
            kw=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRCardinalityAccess().getFullStopFullStopKeyword_1());
              		
            }
            // InternalAle.g:1000:3: (this_INT_2= RULE_INT | this_MultOp_3= RULE_MULTOP )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_INT) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_MULTOP) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalAle.g:1001:4: this_INT_2= RULE_INT
                    {
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:1009:4: this_MultOp_3= RULE_MULTOP
                    {
                    this_MultOp_3=(Token)match(input,RULE_MULTOP,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_MultOp_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_MultOp_3, grammarAccess.getRCardinalityAccess().getMultOpTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerCardinality"


    // $ANTLR start "entryRulerOpposite"
    // InternalAle.g:1021:1: entryRulerOpposite returns [EObject current=null] : iv_rulerOpposite= rulerOpposite EOF ;
    public final EObject entryRulerOpposite() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerOpposite = null;


        try {
            // InternalAle.g:1021:50: (iv_rulerOpposite= rulerOpposite EOF )
            // InternalAle.g:1022:2: iv_rulerOpposite= rulerOpposite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getROppositeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerOpposite=rulerOpposite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerOpposite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerOpposite"


    // $ANTLR start "rulerOpposite"
    // InternalAle.g:1028:1: rulerOpposite returns [EObject current=null] : (otherlv_0= 'opposite' ( (lv_name_1_0= RULE_IDENT ) ) ) ;
    public final EObject rulerOpposite() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAle.g:1034:2: ( (otherlv_0= 'opposite' ( (lv_name_1_0= RULE_IDENT ) ) ) )
            // InternalAle.g:1035:2: (otherlv_0= 'opposite' ( (lv_name_1_0= RULE_IDENT ) ) )
            {
            // InternalAle.g:1035:2: (otherlv_0= 'opposite' ( (lv_name_1_0= RULE_IDENT ) ) )
            // InternalAle.g:1036:3: otherlv_0= 'opposite' ( (lv_name_1_0= RULE_IDENT ) )
            {
            otherlv_0=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getROppositeAccess().getOppositeKeyword_0());
              		
            }
            // InternalAle.g:1040:3: ( (lv_name_1_0= RULE_IDENT ) )
            // InternalAle.g:1041:4: (lv_name_1_0= RULE_IDENT )
            {
            // InternalAle.g:1041:4: (lv_name_1_0= RULE_IDENT )
            // InternalAle.g:1042:5: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getROppositeAccess().getNameIdentTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getROppositeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerOpposite"


    // $ANTLR start "entryRulerSimpleStatement"
    // InternalAle.g:1062:1: entryRulerSimpleStatement returns [EObject current=null] : iv_rulerSimpleStatement= rulerSimpleStatement EOF ;
    public final EObject entryRulerSimpleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerSimpleStatement = null;


        try {
            // InternalAle.g:1062:57: (iv_rulerSimpleStatement= rulerSimpleStatement EOF )
            // InternalAle.g:1063:2: iv_rulerSimpleStatement= rulerSimpleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRSimpleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerSimpleStatement=rulerSimpleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerSimpleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerSimpleStatement"


    // $ANTLR start "rulerSimpleStatement"
    // InternalAle.g:1069:1: rulerSimpleStatement returns [EObject current=null] : (this_rVarDecl_0= rulerVarDecl | this_rAssign_1= rulerAssign | this_rInsert_2= rulerInsert | this_rRemove_3= rulerRemove | this_rExpression_4= rulerExpression ) ;
    public final EObject rulerSimpleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_rVarDecl_0 = null;

        EObject this_rAssign_1 = null;

        EObject this_rInsert_2 = null;

        EObject this_rRemove_3 = null;

        EObject this_rExpression_4 = null;



        	enterRule();

        try {
            // InternalAle.g:1075:2: ( (this_rVarDecl_0= rulerVarDecl | this_rAssign_1= rulerAssign | this_rInsert_2= rulerInsert | this_rRemove_3= rulerRemove | this_rExpression_4= rulerExpression ) )
            // InternalAle.g:1076:2: (this_rVarDecl_0= rulerVarDecl | this_rAssign_1= rulerAssign | this_rInsert_2= rulerInsert | this_rRemove_3= rulerRemove | this_rExpression_4= rulerExpression )
            {
            // InternalAle.g:1076:2: (this_rVarDecl_0= rulerVarDecl | this_rAssign_1= rulerAssign | this_rInsert_2= rulerInsert | this_rRemove_3= rulerRemove | this_rExpression_4= rulerExpression )
            int alt21=5;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalAle.g:1077:3: this_rVarDecl_0= rulerVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRSimpleStatementAccess().getRVarDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rVarDecl_0=rulerVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rVarDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:1089:3: this_rAssign_1= rulerAssign
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRSimpleStatementAccess().getRAssignParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rAssign_1=rulerAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rAssign_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAle.g:1101:3: this_rInsert_2= rulerInsert
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRSimpleStatementAccess().getRInsertParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rInsert_2=rulerInsert();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rInsert_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAle.g:1113:3: this_rRemove_3= rulerRemove
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRSimpleStatementAccess().getRRemoveParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rRemove_3=rulerRemove();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rRemove_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAle.g:1125:3: this_rExpression_4= rulerExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRSimpleStatementAccess().getRExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rExpression_4=rulerExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerSimpleStatement"


    // $ANTLR start "entryRulerBlockStatement"
    // InternalAle.g:1140:1: entryRulerBlockStatement returns [EObject current=null] : iv_rulerBlockStatement= rulerBlockStatement EOF ;
    public final EObject entryRulerBlockStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerBlockStatement = null;


        try {
            // InternalAle.g:1140:56: (iv_rulerBlockStatement= rulerBlockStatement EOF )
            // InternalAle.g:1141:2: iv_rulerBlockStatement= rulerBlockStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRBlockStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerBlockStatement=rulerBlockStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerBlockStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerBlockStatement"


    // $ANTLR start "rulerBlockStatement"
    // InternalAle.g:1147:1: rulerBlockStatement returns [EObject current=null] : (this_rForEach_0= rulerForEach | this_rWhile_1= rulerWhile | this_rIf_2= rulerIf ) ;
    public final EObject rulerBlockStatement() throws RecognitionException {
        EObject current = null;

        EObject this_rForEach_0 = null;

        EObject this_rWhile_1 = null;

        EObject this_rIf_2 = null;



        	enterRule();

        try {
            // InternalAle.g:1153:2: ( (this_rForEach_0= rulerForEach | this_rWhile_1= rulerWhile | this_rIf_2= rulerIf ) )
            // InternalAle.g:1154:2: (this_rForEach_0= rulerForEach | this_rWhile_1= rulerWhile | this_rIf_2= rulerIf )
            {
            // InternalAle.g:1154:2: (this_rForEach_0= rulerForEach | this_rWhile_1= rulerWhile | this_rIf_2= rulerIf )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt22=1;
                }
                break;
            case 45:
                {
                alt22=2;
                }
                break;
            case 43:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalAle.g:1155:3: this_rForEach_0= rulerForEach
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRBlockStatementAccess().getRForEachParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rForEach_0=rulerForEach();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rForEach_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:1167:3: this_rWhile_1= rulerWhile
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRBlockStatementAccess().getRWhileParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rWhile_1=rulerWhile();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rWhile_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAle.g:1179:3: this_rIf_2= rulerIf
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRBlockStatementAccess().getRIfParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_rIf_2=rulerIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_rIf_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerBlockStatement"


    // $ANTLR start "entryRulerVarDecl"
    // InternalAle.g:1194:1: entryRulerVarDecl returns [EObject current=null] : iv_rulerVarDecl= rulerVarDecl EOF ;
    public final EObject entryRulerVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerVarDecl = null;


        try {
            // InternalAle.g:1194:49: (iv_rulerVarDecl= rulerVarDecl EOF )
            // InternalAle.g:1195:2: iv_rulerVarDecl= rulerVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerVarDecl=rulerVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerVarDecl"


    // $ANTLR start "rulerVarDecl"
    // InternalAle.g:1201:1: rulerVarDecl returns [EObject current=null] : ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )? ) ;
    public final EObject rulerVarDecl() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        EObject lv_exp_3_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1207:2: ( ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )? ) )
            // InternalAle.g:1208:2: ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )? )
            {
            // InternalAle.g:1208:2: ( ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )? )
            // InternalAle.g:1209:3: ( (lv_type_0_0= rulerType ) ) ( (lv_name_1_0= RULE_IDENT ) ) (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )?
            {
            // InternalAle.g:1209:3: ( (lv_type_0_0= rulerType ) )
            // InternalAle.g:1210:4: (lv_type_0_0= rulerType )
            {
            // InternalAle.g:1210:4: (lv_type_0_0= rulerType )
            // InternalAle.g:1211:5: lv_type_0_0= rulerType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRVarDeclAccess().getTypeRTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_0_0=rulerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRVarDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.eclipse.emf.ecoretools.Ale.rType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:1228:3: ( (lv_name_1_0= RULE_IDENT ) )
            // InternalAle.g:1229:4: (lv_name_1_0= RULE_IDENT )
            {
            // InternalAle.g:1229:4: (lv_name_1_0= RULE_IDENT )
            // InternalAle.g:1230:5: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRVarDeclAccess().getNameIdentTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRVarDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            // InternalAle.g:1246:3: (otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==34) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalAle.g:1247:4: otherlv_2= ':=' ( (lv_exp_3_0= ruleexpression ) )
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRVarDeclAccess().getColonEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalAle.g:1251:4: ( (lv_exp_3_0= ruleexpression ) )
                    // InternalAle.g:1252:5: (lv_exp_3_0= ruleexpression )
                    {
                    // InternalAle.g:1252:5: (lv_exp_3_0= ruleexpression )
                    // InternalAle.g:1253:6: lv_exp_3_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRVarDeclAccess().getExpExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_3_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_3_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerVarDecl"


    // $ANTLR start "entryRulerAssign"
    // InternalAle.g:1275:1: entryRulerAssign returns [EObject current=null] : iv_rulerAssign= rulerAssign EOF ;
    public final EObject entryRulerAssign() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerAssign = null;


        try {
            // InternalAle.g:1275:48: (iv_rulerAssign= rulerAssign EOF )
            // InternalAle.g:1276:2: iv_rulerAssign= rulerAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerAssign=rulerAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerAssign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerAssign"


    // $ANTLR start "rulerAssign"
    // InternalAle.g:1282:1: rulerAssign returns [EObject current=null] : ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= ':=' ( (lv_exp_2_0= ruleexpression ) ) ) ;
    public final EObject rulerAssign() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_target_0_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1288:2: ( ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= ':=' ( (lv_exp_2_0= ruleexpression ) ) ) )
            // InternalAle.g:1289:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= ':=' ( (lv_exp_2_0= ruleexpression ) ) )
            {
            // InternalAle.g:1289:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= ':=' ( (lv_exp_2_0= ruleexpression ) ) )
            // InternalAle.g:1290:3: ( (lv_target_0_0= ruleexpression ) ) otherlv_1= ':=' ( (lv_exp_2_0= ruleexpression ) )
            {
            // InternalAle.g:1290:3: ( (lv_target_0_0= ruleexpression ) )
            // InternalAle.g:1291:4: (lv_target_0_0= ruleexpression )
            {
            // InternalAle.g:1291:4: (lv_target_0_0= ruleexpression )
            // InternalAle.g:1292:5: lv_target_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRAssignAccess().getTargetExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_target_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRAssignRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRAssignAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalAle.g:1313:3: ( (lv_exp_2_0= ruleexpression ) )
            // InternalAle.g:1314:4: (lv_exp_2_0= ruleexpression )
            {
            // InternalAle.g:1314:4: (lv_exp_2_0= ruleexpression )
            // InternalAle.g:1315:5: lv_exp_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRAssignAccess().getExpExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRAssignRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerAssign"


    // $ANTLR start "entryRulerInsert"
    // InternalAle.g:1336:1: entryRulerInsert returns [EObject current=null] : iv_rulerInsert= rulerInsert EOF ;
    public final EObject entryRulerInsert() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerInsert = null;


        try {
            // InternalAle.g:1336:48: (iv_rulerInsert= rulerInsert EOF )
            // InternalAle.g:1337:2: iv_rulerInsert= rulerInsert EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRInsertRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerInsert=rulerInsert();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerInsert; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerInsert"


    // $ANTLR start "rulerInsert"
    // InternalAle.g:1343:1: rulerInsert returns [EObject current=null] : ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '+=' ( (lv_exp_2_0= ruleexpression ) ) ) ;
    public final EObject rulerInsert() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_target_0_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1349:2: ( ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '+=' ( (lv_exp_2_0= ruleexpression ) ) ) )
            // InternalAle.g:1350:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '+=' ( (lv_exp_2_0= ruleexpression ) ) )
            {
            // InternalAle.g:1350:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '+=' ( (lv_exp_2_0= ruleexpression ) ) )
            // InternalAle.g:1351:3: ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '+=' ( (lv_exp_2_0= ruleexpression ) )
            {
            // InternalAle.g:1351:3: ( (lv_target_0_0= ruleexpression ) )
            // InternalAle.g:1352:4: (lv_target_0_0= ruleexpression )
            {
            // InternalAle.g:1352:4: (lv_target_0_0= ruleexpression )
            // InternalAle.g:1353:5: lv_target_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRInsertAccess().getTargetExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_target_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRInsertRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,37,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRInsertAccess().getPlusSignEqualsSignKeyword_1());
              		
            }
            // InternalAle.g:1374:3: ( (lv_exp_2_0= ruleexpression ) )
            // InternalAle.g:1375:4: (lv_exp_2_0= ruleexpression )
            {
            // InternalAle.g:1375:4: (lv_exp_2_0= ruleexpression )
            // InternalAle.g:1376:5: lv_exp_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRInsertAccess().getExpExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRInsertRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerInsert"


    // $ANTLR start "entryRulerRemove"
    // InternalAle.g:1397:1: entryRulerRemove returns [EObject current=null] : iv_rulerRemove= rulerRemove EOF ;
    public final EObject entryRulerRemove() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerRemove = null;


        try {
            // InternalAle.g:1397:48: (iv_rulerRemove= rulerRemove EOF )
            // InternalAle.g:1398:2: iv_rulerRemove= rulerRemove EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRRemoveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerRemove=rulerRemove();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerRemove; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerRemove"


    // $ANTLR start "rulerRemove"
    // InternalAle.g:1404:1: rulerRemove returns [EObject current=null] : ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '-=' ( (lv_exp_2_0= ruleexpression ) ) ) ;
    public final EObject rulerRemove() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_target_0_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1410:2: ( ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '-=' ( (lv_exp_2_0= ruleexpression ) ) ) )
            // InternalAle.g:1411:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '-=' ( (lv_exp_2_0= ruleexpression ) ) )
            {
            // InternalAle.g:1411:2: ( ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '-=' ( (lv_exp_2_0= ruleexpression ) ) )
            // InternalAle.g:1412:3: ( (lv_target_0_0= ruleexpression ) ) otherlv_1= '-=' ( (lv_exp_2_0= ruleexpression ) )
            {
            // InternalAle.g:1412:3: ( (lv_target_0_0= ruleexpression ) )
            // InternalAle.g:1413:4: (lv_target_0_0= ruleexpression )
            {
            // InternalAle.g:1413:4: (lv_target_0_0= ruleexpression )
            // InternalAle.g:1414:5: lv_target_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRRemoveAccess().getTargetExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_target_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRRemoveRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,38,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRRemoveAccess().getHyphenMinusEqualsSignKeyword_1());
              		
            }
            // InternalAle.g:1435:3: ( (lv_exp_2_0= ruleexpression ) )
            // InternalAle.g:1436:4: (lv_exp_2_0= ruleexpression )
            {
            // InternalAle.g:1436:4: (lv_exp_2_0= ruleexpression )
            // InternalAle.g:1437:5: lv_exp_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRRemoveAccess().getExpExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRRemoveRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerRemove"


    // $ANTLR start "entryRulerForEach"
    // InternalAle.g:1458:1: entryRulerForEach returns [EObject current=null] : iv_rulerForEach= rulerForEach EOF ;
    public final EObject entryRulerForEach() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerForEach = null;


        try {
            // InternalAle.g:1458:49: (iv_rulerForEach= rulerForEach EOF )
            // InternalAle.g:1459:2: iv_rulerForEach= rulerForEach EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRForEachRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerForEach=rulerForEach();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerForEach; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerForEach"


    // $ANTLR start "rulerForEach"
    // InternalAle.g:1465:1: rulerForEach returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_iterator_2_0= RULE_IDENT ) ) otherlv_3= 'in' ( (lv_collection_4_0= rulerCollection ) ) otherlv_5= ')' ( (lv_block_6_0= rulerBlock ) ) ) ;
    public final EObject rulerForEach() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_iterator_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_collection_4_0 = null;

        EObject lv_block_6_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1471:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_iterator_2_0= RULE_IDENT ) ) otherlv_3= 'in' ( (lv_collection_4_0= rulerCollection ) ) otherlv_5= ')' ( (lv_block_6_0= rulerBlock ) ) ) )
            // InternalAle.g:1472:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_iterator_2_0= RULE_IDENT ) ) otherlv_3= 'in' ( (lv_collection_4_0= rulerCollection ) ) otherlv_5= ')' ( (lv_block_6_0= rulerBlock ) ) )
            {
            // InternalAle.g:1472:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_iterator_2_0= RULE_IDENT ) ) otherlv_3= 'in' ( (lv_collection_4_0= rulerCollection ) ) otherlv_5= ')' ( (lv_block_6_0= rulerBlock ) ) )
            // InternalAle.g:1473:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_iterator_2_0= RULE_IDENT ) ) otherlv_3= 'in' ( (lv_collection_4_0= rulerCollection ) ) otherlv_5= ')' ( (lv_block_6_0= rulerBlock ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRForEachAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRForEachAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAle.g:1481:3: ( (lv_iterator_2_0= RULE_IDENT ) )
            // InternalAle.g:1482:4: (lv_iterator_2_0= RULE_IDENT )
            {
            // InternalAle.g:1482:4: (lv_iterator_2_0= RULE_IDENT )
            // InternalAle.g:1483:5: lv_iterator_2_0= RULE_IDENT
            {
            lv_iterator_2_0=(Token)match(input,RULE_IDENT,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_iterator_2_0, grammarAccess.getRForEachAccess().getIteratorIdentTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRForEachRule());
              					}
              					setWithLastConsumed(
              						current,
              						"iterator",
              						lv_iterator_2_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRForEachAccess().getInKeyword_3());
              		
            }
            // InternalAle.g:1503:3: ( (lv_collection_4_0= rulerCollection ) )
            // InternalAle.g:1504:4: (lv_collection_4_0= rulerCollection )
            {
            // InternalAle.g:1504:4: (lv_collection_4_0= rulerCollection )
            // InternalAle.g:1505:5: lv_collection_4_0= rulerCollection
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRForEachAccess().getCollectionRCollectionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_collection_4_0=rulerCollection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRForEachRule());
              					}
              					set(
              						current,
              						"collection",
              						lv_collection_4_0,
              						"org.eclipse.emf.ecoretools.Ale.rCollection");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getRForEachAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalAle.g:1526:3: ( (lv_block_6_0= rulerBlock ) )
            // InternalAle.g:1527:4: (lv_block_6_0= rulerBlock )
            {
            // InternalAle.g:1527:4: (lv_block_6_0= rulerBlock )
            // InternalAle.g:1528:5: lv_block_6_0= rulerBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRForEachAccess().getBlockRBlockParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_6_0=rulerBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRForEachRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_6_0,
              						"org.eclipse.emf.ecoretools.Ale.rBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerForEach"


    // $ANTLR start "entryRulerCollection"
    // InternalAle.g:1549:1: entryRulerCollection returns [EObject current=null] : iv_rulerCollection= rulerCollection EOF ;
    public final EObject entryRulerCollection() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerCollection = null;


        try {
            // InternalAle.g:1549:52: (iv_rulerCollection= rulerCollection EOF )
            // InternalAle.g:1550:2: iv_rulerCollection= rulerCollection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRCollectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerCollection=rulerCollection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerCollection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerCollection"


    // $ANTLR start "rulerCollection"
    // InternalAle.g:1556:1: rulerCollection returns [EObject current=null] : ( (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' ) | ( (lv_exp_5_0= ruleexpression ) ) ) ;
    public final EObject rulerCollection() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_min_1_0=null;
        Token otherlv_2=null;
        Token lv_max_3_0=null;
        Token otherlv_4=null;
        EObject lv_exp_5_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1562:2: ( ( (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' ) | ( (lv_exp_5_0= ruleexpression ) ) ) )
            // InternalAle.g:1563:2: ( (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' ) | ( (lv_exp_5_0= ruleexpression ) ) )
            {
            // InternalAle.g:1563:2: ( (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' ) | ( (lv_exp_5_0= ruleexpression ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==41) ) {
                alt24=1;
            }
            else if ( ((LA24_0>=RULE_IDENT && LA24_0<=RULE_INT)||(LA24_0>=RULE_STRING && LA24_0<=RULE_REAL)||LA24_0==25||LA24_0==29||LA24_0==43||(LA24_0>=54 && LA24_0<=55)||LA24_0==58||(LA24_0>=78 && LA24_0<=88)) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalAle.g:1564:3: (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' )
                    {
                    // InternalAle.g:1564:3: (otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']' )
                    // InternalAle.g:1565:4: otherlv_0= '[' ( (lv_min_1_0= RULE_INT ) ) otherlv_2= '..' ( (lv_max_3_0= RULE_INT ) ) otherlv_4= ']'
                    {
                    otherlv_0=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRCollectionAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalAle.g:1569:4: ( (lv_min_1_0= RULE_INT ) )
                    // InternalAle.g:1570:5: (lv_min_1_0= RULE_INT )
                    {
                    // InternalAle.g:1570:5: (lv_min_1_0= RULE_INT )
                    // InternalAle.g:1571:6: lv_min_1_0= RULE_INT
                    {
                    lv_min_1_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_1_0, grammarAccess.getRCollectionAccess().getMinINTTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRCollectionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_1_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRCollectionAccess().getFullStopFullStopKeyword_0_2());
                      			
                    }
                    // InternalAle.g:1591:4: ( (lv_max_3_0= RULE_INT ) )
                    // InternalAle.g:1592:5: (lv_max_3_0= RULE_INT )
                    {
                    // InternalAle.g:1592:5: (lv_max_3_0= RULE_INT )
                    // InternalAle.g:1593:6: lv_max_3_0= RULE_INT
                    {
                    lv_max_3_0=(Token)match(input,RULE_INT,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_max_3_0, grammarAccess.getRCollectionAccess().getMaxINTTerminalRuleCall_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRCollectionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"max",
                      							lv_max_3_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRCollectionAccess().getRightSquareBracketKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAle.g:1615:3: ( (lv_exp_5_0= ruleexpression ) )
                    {
                    // InternalAle.g:1615:3: ( (lv_exp_5_0= ruleexpression ) )
                    // InternalAle.g:1616:4: (lv_exp_5_0= ruleexpression )
                    {
                    // InternalAle.g:1616:4: (lv_exp_5_0= ruleexpression )
                    // InternalAle.g:1617:5: lv_exp_5_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRCollectionAccess().getExpExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_5_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRCollectionRule());
                      					}
                      					set(
                      						current,
                      						"exp",
                      						lv_exp_5_0,
                      						"org.eclipse.emf.ecoretools.Ale.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerCollection"


    // $ANTLR start "entryRulerBlock"
    // InternalAle.g:1638:1: entryRulerBlock returns [EObject current=null] : iv_rulerBlock= rulerBlock EOF ;
    public final EObject entryRulerBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerBlock = null;


        try {
            // InternalAle.g:1638:47: (iv_rulerBlock= rulerBlock EOF )
            // InternalAle.g:1639:2: iv_rulerBlock= rulerBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerBlock=rulerBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerBlock"


    // $ANTLR start "rulerBlock"
    // InternalAle.g:1645:1: rulerBlock returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )? otherlv_8= '}' ) ;
    public final EObject rulerBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_statements_2_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_statements_7_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1651:2: ( ( () otherlv_1= '{' ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )? otherlv_8= '}' ) )
            // InternalAle.g:1652:2: ( () otherlv_1= '{' ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )? otherlv_8= '}' )
            {
            // InternalAle.g:1652:2: ( () otherlv_1= '{' ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )? otherlv_8= '}' )
            // InternalAle.g:1653:3: () otherlv_1= '{' ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )? otherlv_8= '}'
            {
            // InternalAle.g:1653:3: ()
            // InternalAle.g:1654:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRBlockAccess().getBlockAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,25,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRBlockAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAle.g:1667:3: ( ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )* )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_IDENT && LA27_0<=RULE_INT)||(LA27_0>=RULE_STRING && LA27_0<=RULE_REAL)||LA27_0==25||LA27_0==29||LA27_0==39||LA27_0==43||LA27_0==45||(LA27_0>=54 && LA27_0<=55)||LA27_0==58||(LA27_0>=78 && LA27_0<=88)) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalAle.g:1668:4: ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) ) ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )*
                    {
                    // InternalAle.g:1668:4: ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) )
                    int alt25=2;
                    alt25 = dfa25.predict(input);
                    switch (alt25) {
                        case 1 :
                            // InternalAle.g:1669:5: ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' )
                            {
                            // InternalAle.g:1669:5: ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' )
                            // InternalAle.g:1670:6: ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';'
                            {
                            // InternalAle.g:1670:6: ( (lv_statements_2_0= rulerSimpleStatement ) )
                            // InternalAle.g:1671:7: (lv_statements_2_0= rulerSimpleStatement )
                            {
                            // InternalAle.g:1671:7: (lv_statements_2_0= rulerSimpleStatement )
                            // InternalAle.g:1672:8: lv_statements_2_0= rulerSimpleStatement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_4);
                            lv_statements_2_0=rulerSimpleStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getRBlockRule());
                              								}
                              								add(
                              									current,
                              									"statements",
                              									lv_statements_2_0,
                              									"org.eclipse.emf.ecoretools.Ale.rSimpleStatement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,16,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getRBlockAccess().getSemicolonKeyword_2_0_0_1());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalAle.g:1695:5: ( (lv_statements_4_0= rulerBlockStatement ) )
                            {
                            // InternalAle.g:1695:5: ( (lv_statements_4_0= rulerBlockStatement ) )
                            // InternalAle.g:1696:6: (lv_statements_4_0= rulerBlockStatement )
                            {
                            // InternalAle.g:1696:6: (lv_statements_4_0= rulerBlockStatement )
                            // InternalAle.g:1697:7: lv_statements_4_0= rulerBlockStatement
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_statements_4_0=rulerBlockStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRBlockRule());
                              							}
                              							add(
                              								current,
                              								"statements",
                              								lv_statements_4_0,
                              								"org.eclipse.emf.ecoretools.Ale.rBlockStatement");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalAle.g:1715:4: ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )*
                    loop26:
                    do {
                        int alt26=3;
                        alt26 = dfa26.predict(input);
                        switch (alt26) {
                    	case 1 :
                    	    // InternalAle.g:1716:5: ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' )
                    	    {
                    	    // InternalAle.g:1716:5: ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' )
                    	    // InternalAle.g:1717:6: ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';'
                    	    {
                    	    // InternalAle.g:1717:6: ( (lv_statements_5_0= rulerSimpleStatement ) )
                    	    // InternalAle.g:1718:7: (lv_statements_5_0= rulerSimpleStatement )
                    	    {
                    	    // InternalAle.g:1718:7: (lv_statements_5_0= rulerSimpleStatement )
                    	    // InternalAle.g:1719:8: lv_statements_5_0= rulerSimpleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_1_0_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_statements_5_0=rulerSimpleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRBlockRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"statements",
                    	      									lv_statements_5_0,
                    	      									"org.eclipse.emf.ecoretools.Ale.rSimpleStatement");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_6=(Token)match(input,16,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getRBlockAccess().getSemicolonKeyword_2_1_0_1());
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalAle.g:1742:5: ( (lv_statements_7_0= rulerBlockStatement ) )
                    	    {
                    	    // InternalAle.g:1742:5: ( (lv_statements_7_0= rulerBlockStatement ) )
                    	    // InternalAle.g:1743:6: (lv_statements_7_0= rulerBlockStatement )
                    	    {
                    	    // InternalAle.g:1743:6: (lv_statements_7_0= rulerBlockStatement )
                    	    // InternalAle.g:1744:7: lv_statements_7_0= rulerBlockStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_statements_7_0=rulerBlockStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRBlockRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_7_0,
                    	      								"org.eclipse.emf.ecoretools.Ale.rBlockStatement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getRBlockAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerBlock"


    // $ANTLR start "entryRulerIf"
    // InternalAle.g:1771:1: entryRulerIf returns [EObject current=null] : iv_rulerIf= rulerIf EOF ;
    public final EObject entryRulerIf() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerIf = null;


        try {
            // InternalAle.g:1771:44: (iv_rulerIf= rulerIf EOF )
            // InternalAle.g:1772:2: iv_rulerIf= rulerIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerIf=rulerIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerIf"


    // $ANTLR start "rulerIf"
    // InternalAle.g:1778:1: rulerIf returns [EObject current=null] : (otherlv_0= 'if' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_then_4_0= rulerBlock ) ) (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )? ) ;
    public final EObject rulerIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_cond_2_0 = null;

        EObject lv_then_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1784:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_then_4_0= rulerBlock ) ) (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )? ) )
            // InternalAle.g:1785:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_then_4_0= rulerBlock ) ) (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )? )
            {
            // InternalAle.g:1785:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_then_4_0= rulerBlock ) ) (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )? )
            // InternalAle.g:1786:3: otherlv_0= 'if' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_then_4_0= rulerBlock ) ) (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )?
            {
            otherlv_0=(Token)match(input,43,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRIfAccess().getIfKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRIfAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAle.g:1794:3: ( (lv_cond_2_0= ruleexpression ) )
            // InternalAle.g:1795:4: (lv_cond_2_0= ruleexpression )
            {
            // InternalAle.g:1795:4: (lv_cond_2_0= ruleexpression )
            // InternalAle.g:1796:5: lv_cond_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRIfAccess().getCondExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_cond_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRIfRule());
              					}
              					set(
              						current,
              						"cond",
              						lv_cond_2_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRIfAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalAle.g:1817:3: ( (lv_then_4_0= rulerBlock ) )
            // InternalAle.g:1818:4: (lv_then_4_0= rulerBlock )
            {
            // InternalAle.g:1818:4: (lv_then_4_0= rulerBlock )
            // InternalAle.g:1819:5: lv_then_4_0= rulerBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRIfAccess().getThenRBlockParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_then_4_0=rulerBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRIfRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"org.eclipse.emf.ecoretools.Ale.rBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAle.g:1836:3: (otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==44) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalAle.g:1837:4: otherlv_5= 'else' ( (lv_else_6_0= rulerBlock ) )
                    {
                    otherlv_5=(Token)match(input,44,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRIfAccess().getElseKeyword_5_0());
                      			
                    }
                    // InternalAle.g:1841:4: ( (lv_else_6_0= rulerBlock ) )
                    // InternalAle.g:1842:5: (lv_else_6_0= rulerBlock )
                    {
                    // InternalAle.g:1842:5: (lv_else_6_0= rulerBlock )
                    // InternalAle.g:1843:6: lv_else_6_0= rulerBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRIfAccess().getElseRBlockParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_6_0=rulerBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRIfRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_6_0,
                      							"org.eclipse.emf.ecoretools.Ale.rBlock");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerIf"


    // $ANTLR start "entryRulerWhile"
    // InternalAle.g:1865:1: entryRulerWhile returns [EObject current=null] : iv_rulerWhile= rulerWhile EOF ;
    public final EObject entryRulerWhile() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerWhile = null;


        try {
            // InternalAle.g:1865:47: (iv_rulerWhile= rulerWhile EOF )
            // InternalAle.g:1866:2: iv_rulerWhile= rulerWhile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRWhileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerWhile=rulerWhile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerWhile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerWhile"


    // $ANTLR start "rulerWhile"
    // InternalAle.g:1872:1: rulerWhile returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_block_4_0= rulerBlock ) ) ) ;
    public final EObject rulerWhile() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_cond_2_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1878:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_block_4_0= rulerBlock ) ) ) )
            // InternalAle.g:1879:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_block_4_0= rulerBlock ) ) )
            {
            // InternalAle.g:1879:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_block_4_0= rulerBlock ) ) )
            // InternalAle.g:1880:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_cond_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_block_4_0= rulerBlock ) )
            {
            otherlv_0=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRWhileAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRWhileAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAle.g:1888:3: ( (lv_cond_2_0= ruleexpression ) )
            // InternalAle.g:1889:4: (lv_cond_2_0= ruleexpression )
            {
            // InternalAle.g:1889:4: (lv_cond_2_0= ruleexpression )
            // InternalAle.g:1890:5: lv_cond_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRWhileAccess().getCondExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_cond_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRWhileRule());
              					}
              					set(
              						current,
              						"cond",
              						lv_cond_2_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRWhileAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalAle.g:1911:3: ( (lv_block_4_0= rulerBlock ) )
            // InternalAle.g:1912:4: (lv_block_4_0= rulerBlock )
            {
            // InternalAle.g:1912:4: (lv_block_4_0= rulerBlock )
            // InternalAle.g:1913:5: lv_block_4_0= rulerBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRWhileAccess().getBlockRBlockParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_4_0=rulerBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRWhileRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.eclipse.emf.ecoretools.Ale.rBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerWhile"


    // $ANTLR start "entryRulerExpression"
    // InternalAle.g:1934:1: entryRulerExpression returns [EObject current=null] : iv_rulerExpression= rulerExpression EOF ;
    public final EObject entryRulerExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerExpression = null;


        try {
            // InternalAle.g:1934:52: (iv_rulerExpression= rulerExpression EOF )
            // InternalAle.g:1935:2: iv_rulerExpression= rulerExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerExpression=rulerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerExpression"


    // $ANTLR start "rulerExpression"
    // InternalAle.g:1941:1: rulerExpression returns [EObject current=null] : ( (lv_exp_0_0= ruleexpression ) ) ;
    public final EObject rulerExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1947:2: ( ( (lv_exp_0_0= ruleexpression ) ) )
            // InternalAle.g:1948:2: ( (lv_exp_0_0= ruleexpression ) )
            {
            // InternalAle.g:1948:2: ( (lv_exp_0_0= ruleexpression ) )
            // InternalAle.g:1949:3: (lv_exp_0_0= ruleexpression )
            {
            // InternalAle.g:1949:3: (lv_exp_0_0= ruleexpression )
            // InternalAle.g:1950:4: lv_exp_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRExpressionAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRExpressionRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.eclipse.emf.ecoretools.Ale.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerExpression"


    // $ANTLR start "entryRuleexpression"
    // InternalAle.g:1970:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalAle.g:1970:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalAle.g:1971:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalAle.g:1977:1: ruleexpression returns [EObject current=null] : (this_nonLeftRecExpression_0= rulenonLeftRecExpression ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )* ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_feature_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_varName_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token this_MultOp_29=null;
        Token otherlv_38=null;
        Token otherlv_41=null;
        Token otherlv_44=null;
        Token otherlv_47=null;
        EObject this_nonLeftRecExpression_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_params_7_0 = null;

        AntlrDatatypeRuleToken lv_name_14_0 = null;

        EObject lv_varType_18_0 = null;

        EObject lv_lambda_20_0 = null;

        EObject lv_params_24_0 = null;

        EObject lv_params_26_0 = null;

        EObject lv_right_30_0 = null;

        EObject lv_right_33_0 = null;

        EObject lv_right_36_0 = null;

        EObject lv_right_39_0 = null;

        EObject lv_right_42_0 = null;

        EObject lv_right_45_0 = null;

        EObject lv_right_48_0 = null;



        	enterRule();

        try {
            // InternalAle.g:1983:2: ( (this_nonLeftRecExpression_0= rulenonLeftRecExpression ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )* ) )
            // InternalAle.g:1984:2: (this_nonLeftRecExpression_0= rulenonLeftRecExpression ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )* )
            {
            // InternalAle.g:1984:2: (this_nonLeftRecExpression_0= rulenonLeftRecExpression ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )* )
            // InternalAle.g:1985:3: this_nonLeftRecExpression_0= rulenonLeftRecExpression ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExpressionAccess().getNonLeftRecExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_nonLeftRecExpression_0=rulenonLeftRecExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_nonLeftRecExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAle.g:1996:3: ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )*
            loop35:
            do {
                int alt35=11;
                alt35 = dfa35.predict(input);
                switch (alt35) {
            	case 1 :
            	    // InternalAle.g:1997:4: ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' )
            	    {
            	    // InternalAle.g:1997:4: ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' )
            	    // InternalAle.g:1998:5: () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')'
            	    {
            	    // InternalAle.g:1998:5: ()
            	    // InternalAle.g:1999:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getCallTargetAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_2=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getFullStopKeyword_1_0_1());
            	      				
            	    }
            	    // InternalAle.g:2012:5: ( (lv_name_3_0= RULE_IDENT ) )
            	    // InternalAle.g:2013:6: (lv_name_3_0= RULE_IDENT )
            	    {
            	    // InternalAle.g:2013:6: (lv_name_3_0= RULE_IDENT )
            	    // InternalAle.g:2014:7: lv_name_3_0= RULE_IDENT
            	    {
            	    lv_name_3_0=(Token)match(input,RULE_IDENT,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_name_3_0, grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_0_2_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getExpressionRule());
            	      							}
            	      							setWithLastConsumed(
            	      								current,
            	      								"name",
            	      								lv_name_3_0,
            	      								"org.eclipse.emf.ecoretools.Ale.Ident");
            	      						
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,29,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0_3());
            	      				
            	    }
            	    // InternalAle.g:2034:5: ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )?
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( ((LA30_0>=RULE_IDENT && LA30_0<=RULE_INT)||(LA30_0>=RULE_STRING && LA30_0<=RULE_REAL)||LA30_0==25||LA30_0==29||LA30_0==43||(LA30_0>=54 && LA30_0<=55)||LA30_0==58||(LA30_0>=78 && LA30_0<=88)) ) {
            	        alt30=1;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // InternalAle.g:2035:6: ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )*
            	            {
            	            // InternalAle.g:2035:6: ( (lv_params_5_0= ruleexpression ) )
            	            // InternalAle.g:2036:7: (lv_params_5_0= ruleexpression )
            	            {
            	            // InternalAle.g:2036:7: (lv_params_5_0= ruleexpression )
            	            // InternalAle.g:2037:8: lv_params_5_0= ruleexpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_20);
            	            lv_params_5_0=ruleexpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"params",
            	              									lv_params_5_0,
            	              									"org.eclipse.emf.ecoretools.Ale.expression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalAle.g:2054:6: (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )*
            	            loop29:
            	            do {
            	                int alt29=2;
            	                int LA29_0 = input.LA(1);

            	                if ( (LA29_0==24) ) {
            	                    alt29=1;
            	                }


            	                switch (alt29) {
            	            	case 1 :
            	            	    // InternalAle.g:2055:7: otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) )
            	            	    {
            	            	    otherlv_6=(Token)match(input,24,FOLLOW_22); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_6, grammarAccess.getExpressionAccess().getCommaKeyword_1_0_4_1_0());
            	            	      						
            	            	    }
            	            	    // InternalAle.g:2059:7: ( (lv_params_7_0= ruleexpression ) )
            	            	    // InternalAle.g:2060:8: (lv_params_7_0= ruleexpression )
            	            	    {
            	            	    // InternalAle.g:2060:8: (lv_params_7_0= ruleexpression )
            	            	    // InternalAle.g:2061:9: lv_params_7_0= ruleexpression
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_20);
            	            	    lv_params_7_0=ruleexpression();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getExpressionRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"params",
            	            	      										lv_params_7_0,
            	            	      										"org.eclipse.emf.ecoretools.Ale.expression");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop29;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    otherlv_8=(Token)match(input,30,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_0_5());
            	      				
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAle.g:2086:4: ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) )
            	    {
            	    // InternalAle.g:2086:4: ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) )
            	    // InternalAle.g:2087:5: () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) )
            	    {
            	    // InternalAle.g:2087:5: ()
            	    // InternalAle.g:2088:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getFeatureTargetAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_10=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_10, grammarAccess.getExpressionAccess().getFullStopKeyword_1_1_1());
            	      				
            	    }
            	    // InternalAle.g:2101:5: ( (lv_feature_11_0= RULE_IDENT ) )
            	    // InternalAle.g:2102:6: (lv_feature_11_0= RULE_IDENT )
            	    {
            	    // InternalAle.g:2102:6: (lv_feature_11_0= RULE_IDENT )
            	    // InternalAle.g:2103:7: lv_feature_11_0= RULE_IDENT
            	    {
            	    lv_feature_11_0=(Token)match(input,RULE_IDENT,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_feature_11_0, grammarAccess.getExpressionAccess().getFeatureIdentTerminalRuleCall_1_1_2_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getExpressionRule());
            	      							}
            	      							setWithLastConsumed(
            	      								current,
            	      								"feature",
            	      								lv_feature_11_0,
            	      								"org.eclipse.emf.ecoretools.Ale.Ident");
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAle.g:2121:4: ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) )
            	    {
            	    // InternalAle.g:2121:4: ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) )
            	    // InternalAle.g:2122:5: () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) )
            	    {
            	    // InternalAle.g:2122:5: ()
            	    // InternalAle.g:2123:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getApplyTargetAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_13=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_13, grammarAccess.getExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1());
            	      				
            	    }
            	    // InternalAle.g:2136:5: ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) )
            	    int alt34=2;
            	    int LA34_0 = input.LA(1);

            	    if ( ((LA34_0>=68 && LA34_0<=77)) ) {
            	        alt34=1;
            	    }
            	    else if ( (LA34_0==RULE_IDENT) ) {
            	        alt34=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 34, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt34) {
            	        case 1 :
            	            // InternalAle.g:2137:6: ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' )
            	            {
            	            // InternalAle.g:2137:6: ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' )
            	            // InternalAle.g:2138:7: ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')'
            	            {
            	            // InternalAle.g:2138:7: ( (lv_name_14_0= rulecollectionIterator ) )
            	            // InternalAle.g:2139:8: (lv_name_14_0= rulecollectionIterator )
            	            {
            	            // InternalAle.g:2139:8: (lv_name_14_0= rulecollectionIterator )
            	            // InternalAle.g:2140:9: lv_name_14_0= rulecollectionIterator
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExpressionAccess().getNameCollectionIteratorParserRuleCall_1_2_2_0_0_0());
            	              								
            	            }
            	            pushFollow(FOLLOW_18);
            	            lv_name_14_0=rulecollectionIterator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExpressionRule());
            	              									}
            	              									set(
            	              										current,
            	              										"name",
            	              										lv_name_14_0,
            	              										"org.eclipse.emf.ecoretools.Ale.collectionIterator");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }

            	            otherlv_15=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_15, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_0_1());
            	              						
            	            }
            	            // InternalAle.g:2161:7: ( (lv_varName_16_0= RULE_IDENT ) )
            	            // InternalAle.g:2162:8: (lv_varName_16_0= RULE_IDENT )
            	            {
            	            // InternalAle.g:2162:8: (lv_varName_16_0= RULE_IDENT )
            	            // InternalAle.g:2163:9: lv_varName_16_0= RULE_IDENT
            	            {
            	            lv_varName_16_0=(Token)match(input,RULE_IDENT,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_varName_16_0, grammarAccess.getExpressionAccess().getVarNameIdentTerminalRuleCall_1_2_2_0_2_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getExpressionRule());
            	              									}
            	              									setWithLastConsumed(
            	              										current,
            	              										"varName",
            	              										lv_varName_16_0,
            	              										"org.eclipse.emf.ecoretools.Ale.Ident");
            	              								
            	            }

            	            }


            	            }

            	            // InternalAle.g:2179:7: (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )?
            	            int alt31=2;
            	            int LA31_0 = input.LA(1);

            	            if ( (LA31_0==48) ) {
            	                alt31=1;
            	            }
            	            switch (alt31) {
            	                case 1 :
            	                    // InternalAle.g:2180:8: otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) )
            	                    {
            	                    otherlv_17=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      								newLeafNode(otherlv_17, grammarAccess.getExpressionAccess().getColonKeyword_1_2_2_0_3_0());
            	                      							
            	                    }
            	                    // InternalAle.g:2184:8: ( (lv_varType_18_0= ruletypeLiteral ) )
            	                    // InternalAle.g:2185:9: (lv_varType_18_0= ruletypeLiteral )
            	                    {
            	                    // InternalAle.g:2185:9: (lv_varType_18_0= ruletypeLiteral )
            	                    // InternalAle.g:2186:10: lv_varType_18_0= ruletypeLiteral
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getExpressionAccess().getVarTypeTypeLiteralParserRuleCall_1_2_2_0_3_1_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_41);
            	                    lv_varType_18_0=ruletypeLiteral();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getExpressionRule());
            	                      										}
            	                      										set(
            	                      											current,
            	                      											"varType",
            	                      											lv_varType_18_0,
            	                      											"org.eclipse.emf.ecoretools.Ale.typeLiteral");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_19=(Token)match(input,49,FOLLOW_22); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_19, grammarAccess.getExpressionAccess().getVerticalLineKeyword_1_2_2_0_4());
            	              						
            	            }
            	            // InternalAle.g:2208:7: ( (lv_lambda_20_0= ruleexpression ) )
            	            // InternalAle.g:2209:8: (lv_lambda_20_0= ruleexpression )
            	            {
            	            // InternalAle.g:2209:8: (lv_lambda_20_0= ruleexpression )
            	            // InternalAle.g:2210:9: lv_lambda_20_0= ruleexpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getExpressionAccess().getLambdaExpressionParserRuleCall_1_2_2_0_5_0());
            	              								
            	            }
            	            pushFollow(FOLLOW_31);
            	            lv_lambda_20_0=ruleexpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getExpressionRule());
            	              									}
            	              									set(
            	              										current,
            	              										"lambda",
            	              										lv_lambda_20_0,
            	              										"org.eclipse.emf.ecoretools.Ale.expression");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }

            	            otherlv_21=(Token)match(input,30,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_21, grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_0_6());
            	              						
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalAle.g:2233:6: ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' )
            	            {
            	            // InternalAle.g:2233:6: ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' )
            	            // InternalAle.g:2234:7: ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')'
            	            {
            	            // InternalAle.g:2234:7: ( (lv_name_22_0= RULE_IDENT ) )
            	            // InternalAle.g:2235:8: (lv_name_22_0= RULE_IDENT )
            	            {
            	            // InternalAle.g:2235:8: (lv_name_22_0= RULE_IDENT )
            	            // InternalAle.g:2236:9: lv_name_22_0= RULE_IDENT
            	            {
            	            lv_name_22_0=(Token)match(input,RULE_IDENT,FOLLOW_18); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_name_22_0, grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_2_2_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getExpressionRule());
            	              									}
            	              									setWithLastConsumed(
            	              										current,
            	              										"name",
            	              										lv_name_22_0,
            	              										"org.eclipse.emf.ecoretools.Ale.Ident");
            	              								
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,29,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_23, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_1_1());
            	              						
            	            }
            	            // InternalAle.g:2256:7: ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )?
            	            int alt33=2;
            	            int LA33_0 = input.LA(1);

            	            if ( ((LA33_0>=RULE_IDENT && LA33_0<=RULE_INT)||(LA33_0>=RULE_STRING && LA33_0<=RULE_REAL)||LA33_0==25||LA33_0==29||LA33_0==43||(LA33_0>=54 && LA33_0<=55)||LA33_0==58||(LA33_0>=78 && LA33_0<=88)) ) {
            	                alt33=1;
            	            }
            	            switch (alt33) {
            	                case 1 :
            	                    // InternalAle.g:2257:8: ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )*
            	                    {
            	                    // InternalAle.g:2257:8: ( (lv_params_24_0= ruleexpression ) )
            	                    // InternalAle.g:2258:9: (lv_params_24_0= ruleexpression )
            	                    {
            	                    // InternalAle.g:2258:9: (lv_params_24_0= ruleexpression )
            	                    // InternalAle.g:2259:10: lv_params_24_0= ruleexpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_20);
            	                    lv_params_24_0=ruleexpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getExpressionRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"params",
            	                      											lv_params_24_0,
            	                      											"org.eclipse.emf.ecoretools.Ale.expression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalAle.g:2276:8: (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )*
            	                    loop32:
            	                    do {
            	                        int alt32=2;
            	                        int LA32_0 = input.LA(1);

            	                        if ( (LA32_0==24) ) {
            	                            alt32=1;
            	                        }


            	                        switch (alt32) {
            	                    	case 1 :
            	                    	    // InternalAle.g:2277:9: otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) )
            	                    	    {
            	                    	    otherlv_25=(Token)match(input,24,FOLLOW_22); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_25, grammarAccess.getExpressionAccess().getCommaKeyword_1_2_2_1_2_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalAle.g:2281:9: ( (lv_params_26_0= ruleexpression ) )
            	                    	    // InternalAle.g:2282:10: (lv_params_26_0= ruleexpression )
            	                    	    {
            	                    	    // InternalAle.g:2282:10: (lv_params_26_0= ruleexpression )
            	                    	    // InternalAle.g:2283:11: lv_params_26_0= ruleexpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_20);
            	                    	    lv_params_26_0=ruleexpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getExpressionRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"params",
            	                    	      												lv_params_26_0,
            	                    	      												"org.eclipse.emf.ecoretools.Ale.expression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop32;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            otherlv_27=(Token)match(input,30,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_27, grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_1_3());
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAle.g:2310:4: ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2310:4: ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) )
            	    // InternalAle.g:2311:5: () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2311:5: ()
            	    // InternalAle.g:2312:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getMultLeftAction_1_3_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    this_MultOp_29=(Token)match(input,RULE_MULTOP,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(this_MultOp_29, grammarAccess.getExpressionAccess().getMultOpTerminalRuleCall_1_3_1());
            	      				
            	    }
            	    // InternalAle.g:2325:5: ( (lv_right_30_0= ruleexpression ) )
            	    // InternalAle.g:2326:6: (lv_right_30_0= ruleexpression )
            	    {
            	    // InternalAle.g:2326:6: (lv_right_30_0= ruleexpression )
            	    // InternalAle.g:2327:7: lv_right_30_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_3_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_30_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_30_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAle.g:2346:4: ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2346:4: ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) )
            	    // InternalAle.g:2347:5: () ruleaddOp ( (lv_right_33_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2347:5: ()
            	    // InternalAle.g:2348:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getAddLeftAction_1_4_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExpressionAccess().getAddOpParserRuleCall_1_4_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    ruleaddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }
            	    // InternalAle.g:2367:5: ( (lv_right_33_0= ruleexpression ) )
            	    // InternalAle.g:2368:6: (lv_right_33_0= ruleexpression )
            	    {
            	    // InternalAle.g:2368:6: (lv_right_33_0= ruleexpression )
            	    // InternalAle.g:2369:7: lv_right_33_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_4_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_33_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_33_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAle.g:2388:4: ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2388:4: ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) )
            	    // InternalAle.g:2389:5: () rulecompOp ( (lv_right_36_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2389:5: ()
            	    // InternalAle.g:2390:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getCompLeftAction_1_5_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExpressionAccess().getCompOpParserRuleCall_1_5_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    rulecompOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }
            	    // InternalAle.g:2409:5: ( (lv_right_36_0= ruleexpression ) )
            	    // InternalAle.g:2410:6: (lv_right_36_0= ruleexpression )
            	    {
            	    // InternalAle.g:2410:6: (lv_right_36_0= ruleexpression )
            	    // InternalAle.g:2411:7: lv_right_36_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_5_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_36_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_36_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAle.g:2430:4: ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2430:4: ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) )
            	    // InternalAle.g:2431:5: () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2431:5: ()
            	    // InternalAle.g:2432:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getAndLeftAction_1_6_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_38=(Token)match(input,50,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_38, grammarAccess.getExpressionAccess().getAndKeyword_1_6_1());
            	      				
            	    }
            	    // InternalAle.g:2445:5: ( (lv_right_39_0= ruleexpression ) )
            	    // InternalAle.g:2446:6: (lv_right_39_0= ruleexpression )
            	    {
            	    // InternalAle.g:2446:6: (lv_right_39_0= ruleexpression )
            	    // InternalAle.g:2447:7: lv_right_39_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_6_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_39_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_39_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAle.g:2466:4: ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2466:4: ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) )
            	    // InternalAle.g:2467:5: () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2467:5: ()
            	    // InternalAle.g:2468:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getOrLeftAction_1_7_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_41=(Token)match(input,51,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_41, grammarAccess.getExpressionAccess().getOrKeyword_1_7_1());
            	      				
            	    }
            	    // InternalAle.g:2481:5: ( (lv_right_42_0= ruleexpression ) )
            	    // InternalAle.g:2482:6: (lv_right_42_0= ruleexpression )
            	    {
            	    // InternalAle.g:2482:6: (lv_right_42_0= ruleexpression )
            	    // InternalAle.g:2483:7: lv_right_42_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_7_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_42_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_42_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAle.g:2502:4: ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2502:4: ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) )
            	    // InternalAle.g:2503:5: () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2503:5: ()
            	    // InternalAle.g:2504:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getXorLeftAction_1_8_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_44=(Token)match(input,52,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_44, grammarAccess.getExpressionAccess().getXorKeyword_1_8_1());
            	      				
            	    }
            	    // InternalAle.g:2517:5: ( (lv_right_45_0= ruleexpression ) )
            	    // InternalAle.g:2518:6: (lv_right_45_0= ruleexpression )
            	    {
            	    // InternalAle.g:2518:6: (lv_right_45_0= ruleexpression )
            	    // InternalAle.g:2519:7: lv_right_45_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_8_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_45_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_45_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAle.g:2538:4: ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) )
            	    {
            	    // InternalAle.g:2538:4: ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) )
            	    // InternalAle.g:2539:5: () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) )
            	    {
            	    // InternalAle.g:2539:5: ()
            	    // InternalAle.g:2540:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExpressionAccess().getImplieLeftAction_1_9_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    otherlv_47=(Token)match(input,53,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_47, grammarAccess.getExpressionAccess().getImplieKeyword_1_9_1());
            	      				
            	    }
            	    // InternalAle.g:2553:5: ( (lv_right_48_0= ruleexpression ) )
            	    // InternalAle.g:2554:6: (lv_right_48_0= ruleexpression )
            	    {
            	    // InternalAle.g:2554:6: (lv_right_48_0= ruleexpression )
            	    // InternalAle.g:2555:7: lv_right_48_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_9_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_48_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_48_0,
            	      								"org.eclipse.emf.ecoretools.Ale.expression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRulenonLeftRecExpression"
    // InternalAle.g:2578:1: entryRulenonLeftRecExpression returns [EObject current=null] : iv_rulenonLeftRecExpression= rulenonLeftRecExpression EOF ;
    public final EObject entryRulenonLeftRecExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulenonLeftRecExpression = null;


        try {
            // InternalAle.g:2578:61: (iv_rulenonLeftRecExpression= rulenonLeftRecExpression EOF )
            // InternalAle.g:2579:2: iv_rulenonLeftRecExpression= rulenonLeftRecExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonLeftRecExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulenonLeftRecExpression=rulenonLeftRecExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulenonLeftRecExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulenonLeftRecExpression"


    // $ANTLR start "rulenonLeftRecExpression"
    // InternalAle.g:2585:1: rulenonLeftRecExpression returns [EObject current=null] : ( ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) ) | ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) ) | ( () ( (lv_ID_7_0= RULE_IDENT ) ) ) | ( () ( (lv_literal_9_0= ruleliteral ) ) ) | (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' ) | ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' ) | ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) ) ) ;
    public final EObject rulenonLeftRecExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_ID_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        EObject lv_exp_2_0 = null;

        EObject lv_exp_5_0 = null;

        EObject lv_literal_9_0 = null;

        EObject this_expression_11 = null;

        EObject lv_cond_15_0 = null;

        EObject lv_then_17_0 = null;

        EObject lv_else_19_0 = null;

        EObject lv_bindings_23_0 = null;

        EObject lv_bindings_25_0 = null;

        EObject lv_exp_27_0 = null;



        	enterRule();

        try {
            // InternalAle.g:2591:2: ( ( ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) ) | ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) ) | ( () ( (lv_ID_7_0= RULE_IDENT ) ) ) | ( () ( (lv_literal_9_0= ruleliteral ) ) ) | (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' ) | ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' ) | ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) ) ) )
            // InternalAle.g:2592:2: ( ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) ) | ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) ) | ( () ( (lv_ID_7_0= RULE_IDENT ) ) ) | ( () ( (lv_literal_9_0= ruleliteral ) ) ) | (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' ) | ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' ) | ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) ) )
            {
            // InternalAle.g:2592:2: ( ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) ) | ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) ) | ( () ( (lv_ID_7_0= RULE_IDENT ) ) ) | ( () ( (lv_literal_9_0= ruleliteral ) ) ) | (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' ) | ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' ) | ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) ) )
            int alt37=7;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt37=1;
                }
                break;
            case 55:
                {
                alt37=2;
                }
                break;
            case RULE_IDENT:
                {
                int LA37_3 = input.LA(2);

                if ( (LA37_3==EOF||LA37_3==RULE_MULTOP||LA37_3==16||LA37_3==24||LA37_3==26||LA37_3==30||LA37_3==34||(LA37_3>=37 && LA37_3<=38)||LA37_3==40||LA37_3==44||(LA37_3>=46 && LA37_3<=47)||(LA37_3>=50 && LA37_3<=53)||(LA37_3>=55 && LA37_3<=57)||(LA37_3>=59 && LA37_3<=67)) ) {
                    alt37=3;
                }
                else if ( (LA37_3==89) ) {
                    alt37=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_REAL:
            case 25:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
                {
                alt37=4;
                }
                break;
            case 29:
                {
                alt37=5;
                }
                break;
            case 43:
                {
                alt37=6;
                }
                break;
            case 58:
                {
                alt37=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalAle.g:2593:3: ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) )
                    {
                    // InternalAle.g:2593:3: ( () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) ) )
                    // InternalAle.g:2594:4: () otherlv_1= 'not' ( (lv_exp_2_0= ruleexpression ) )
                    {
                    // InternalAle.g:2594:4: ()
                    // InternalAle.g:2595:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getNotAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,54,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNonLeftRecExpressionAccess().getNotKeyword_0_1());
                      			
                    }
                    // InternalAle.g:2608:4: ( (lv_exp_2_0= ruleexpression ) )
                    // InternalAle.g:2609:5: (lv_exp_2_0= ruleexpression )
                    {
                    // InternalAle.g:2609:5: (lv_exp_2_0= ruleexpression )
                    // InternalAle.g:2610:6: lv_exp_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_2_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAle.g:2629:3: ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) )
                    {
                    // InternalAle.g:2629:3: ( () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) ) )
                    // InternalAle.g:2630:4: () otherlv_4= '-' ( (lv_exp_5_0= ruleexpression ) )
                    {
                    // InternalAle.g:2630:4: ()
                    // InternalAle.g:2631:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getMinAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,55,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getNonLeftRecExpressionAccess().getHyphenMinusKeyword_1_1());
                      			
                    }
                    // InternalAle.g:2644:4: ( (lv_exp_5_0= ruleexpression ) )
                    // InternalAle.g:2645:5: (lv_exp_5_0= ruleexpression )
                    {
                    // InternalAle.g:2645:5: (lv_exp_5_0= ruleexpression )
                    // InternalAle.g:2646:6: lv_exp_5_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_5_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_5_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAle.g:2665:3: ( () ( (lv_ID_7_0= RULE_IDENT ) ) )
                    {
                    // InternalAle.g:2665:3: ( () ( (lv_ID_7_0= RULE_IDENT ) ) )
                    // InternalAle.g:2666:4: () ( (lv_ID_7_0= RULE_IDENT ) )
                    {
                    // InternalAle.g:2666:4: ()
                    // InternalAle.g:2667:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getVarRefAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAle.g:2676:4: ( (lv_ID_7_0= RULE_IDENT ) )
                    // InternalAle.g:2677:5: (lv_ID_7_0= RULE_IDENT )
                    {
                    // InternalAle.g:2677:5: (lv_ID_7_0= RULE_IDENT )
                    // InternalAle.g:2678:6: lv_ID_7_0= RULE_IDENT
                    {
                    lv_ID_7_0=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ID_7_0, grammarAccess.getNonLeftRecExpressionAccess().getIDIdentTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"ID",
                      							lv_ID_7_0,
                      							"org.eclipse.emf.ecoretools.Ale.Ident");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAle.g:2696:3: ( () ( (lv_literal_9_0= ruleliteral ) ) )
                    {
                    // InternalAle.g:2696:3: ( () ( (lv_literal_9_0= ruleliteral ) ) )
                    // InternalAle.g:2697:4: () ( (lv_literal_9_0= ruleliteral ) )
                    {
                    // InternalAle.g:2697:4: ()
                    // InternalAle.g:2698:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getLitAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAle.g:2707:4: ( (lv_literal_9_0= ruleliteral ) )
                    // InternalAle.g:2708:5: (lv_literal_9_0= ruleliteral )
                    {
                    // InternalAle.g:2708:5: (lv_literal_9_0= ruleliteral )
                    // InternalAle.g:2709:6: lv_literal_9_0= ruleliteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getLiteralLiteralParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_9_0=ruleliteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"literal",
                      							lv_literal_9_0,
                      							"org.eclipse.emf.ecoretools.Ale.literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAle.g:2728:3: (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' )
                    {
                    // InternalAle.g:2728:3: (otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')' )
                    // InternalAle.g:2729:4: otherlv_10= '(' this_expression_11= ruleexpression otherlv_12= ')'
                    {
                    otherlv_10=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getNonLeftRecExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FOLLOW_31);
                    this_expression_11=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_expression_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_12=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getNonLeftRecExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAle.g:2750:3: ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' )
                    {
                    // InternalAle.g:2750:3: ( () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif' )
                    // InternalAle.g:2751:4: () otherlv_14= 'if' ( (lv_cond_15_0= ruleexpression ) ) otherlv_16= 'then' ( (lv_then_17_0= ruleexpression ) ) otherlv_18= 'else' ( (lv_else_19_0= ruleexpression ) ) otherlv_20= 'endif'
                    {
                    // InternalAle.g:2751:4: ()
                    // InternalAle.g:2752:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getConditionalAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_14=(Token)match(input,43,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getNonLeftRecExpressionAccess().getIfKeyword_5_1());
                      			
                    }
                    // InternalAle.g:2765:4: ( (lv_cond_15_0= ruleexpression ) )
                    // InternalAle.g:2766:5: (lv_cond_15_0= ruleexpression )
                    {
                    // InternalAle.g:2766:5: (lv_cond_15_0= ruleexpression )
                    // InternalAle.g:2767:6: lv_cond_15_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getCondExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_cond_15_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"cond",
                      							lv_cond_15_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,56,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getNonLeftRecExpressionAccess().getThenKeyword_5_3());
                      			
                    }
                    // InternalAle.g:2788:4: ( (lv_then_17_0= ruleexpression ) )
                    // InternalAle.g:2789:5: (lv_then_17_0= ruleexpression )
                    {
                    // InternalAle.g:2789:5: (lv_then_17_0= ruleexpression )
                    // InternalAle.g:2790:6: lv_then_17_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getThenExpressionParserRuleCall_5_4_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_then_17_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"then",
                      							lv_then_17_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,44,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getNonLeftRecExpressionAccess().getElseKeyword_5_5());
                      			
                    }
                    // InternalAle.g:2811:4: ( (lv_else_19_0= ruleexpression ) )
                    // InternalAle.g:2812:5: (lv_else_19_0= ruleexpression )
                    {
                    // InternalAle.g:2812:5: (lv_else_19_0= ruleexpression )
                    // InternalAle.g:2813:6: lv_else_19_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getElseExpressionParserRuleCall_5_6_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_else_19_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_19_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getNonLeftRecExpressionAccess().getEndifKeyword_5_7());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAle.g:2836:3: ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) )
                    {
                    // InternalAle.g:2836:3: ( () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) ) )
                    // InternalAle.g:2837:4: () otherlv_22= 'let' ( (lv_bindings_23_0= rulebinding ) ) (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )* otherlv_26= 'in' ( (lv_exp_27_0= ruleexpression ) )
                    {
                    // InternalAle.g:2837:4: ()
                    // InternalAle.g:2838:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNonLeftRecExpressionAccess().getLetAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_22=(Token)match(input,58,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getNonLeftRecExpressionAccess().getLetKeyword_6_1());
                      			
                    }
                    // InternalAle.g:2851:4: ( (lv_bindings_23_0= rulebinding ) )
                    // InternalAle.g:2852:5: (lv_bindings_23_0= rulebinding )
                    {
                    // InternalAle.g:2852:5: (lv_bindings_23_0= rulebinding )
                    // InternalAle.g:2853:6: lv_bindings_23_0= rulebinding
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_bindings_23_0=rulebinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						add(
                      							current,
                      							"bindings",
                      							lv_bindings_23_0,
                      							"org.eclipse.emf.ecoretools.Ale.binding");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAle.g:2870:4: (otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==24) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // InternalAle.g:2871:5: otherlv_24= ',' ( (lv_bindings_25_0= rulebinding ) )
                    	    {
                    	    otherlv_24=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_24, grammarAccess.getNonLeftRecExpressionAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalAle.g:2875:5: ( (lv_bindings_25_0= rulebinding ) )
                    	    // InternalAle.g:2876:6: (lv_bindings_25_0= rulebinding )
                    	    {
                    	    // InternalAle.g:2876:6: (lv_bindings_25_0= rulebinding )
                    	    // InternalAle.g:2877:7: lv_bindings_25_0= rulebinding
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_45);
                    	    lv_bindings_25_0=rulebinding();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"bindings",
                    	      								lv_bindings_25_0,
                    	      								"org.eclipse.emf.ecoretools.Ale.binding");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    otherlv_26=(Token)match(input,40,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getNonLeftRecExpressionAccess().getInKeyword_6_4());
                      			
                    }
                    // InternalAle.g:2899:4: ( (lv_exp_27_0= ruleexpression ) )
                    // InternalAle.g:2900:5: (lv_exp_27_0= ruleexpression )
                    {
                    // InternalAle.g:2900:5: (lv_exp_27_0= ruleexpression )
                    // InternalAle.g:2901:6: lv_exp_27_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_6_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_27_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNonLeftRecExpressionRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_27_0,
                      							"org.eclipse.emf.ecoretools.Ale.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulenonLeftRecExpression"


    // $ANTLR start "entryRulebinding"
    // InternalAle.g:2923:1: entryRulebinding returns [EObject current=null] : iv_rulebinding= rulebinding EOF ;
    public final EObject entryRulebinding() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebinding = null;


        try {
            // InternalAle.g:2923:48: (iv_rulebinding= rulebinding EOF )
            // InternalAle.g:2924:2: iv_rulebinding= rulebinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebinding=rulebinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebinding"


    // $ANTLR start "rulebinding"
    // InternalAle.g:2930:1: rulebinding returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )? otherlv_3= '=' ( (lv_exp_4_0= ruleexpression ) ) ) ;
    public final EObject rulebinding() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_exp_4_0 = null;



        	enterRule();

        try {
            // InternalAle.g:2936:2: ( ( ( (lv_name_0_0= RULE_IDENT ) ) (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )? otherlv_3= '=' ( (lv_exp_4_0= ruleexpression ) ) ) )
            // InternalAle.g:2937:2: ( ( (lv_name_0_0= RULE_IDENT ) ) (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )? otherlv_3= '=' ( (lv_exp_4_0= ruleexpression ) ) )
            {
            // InternalAle.g:2937:2: ( ( (lv_name_0_0= RULE_IDENT ) ) (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )? otherlv_3= '=' ( (lv_exp_4_0= ruleexpression ) ) )
            // InternalAle.g:2938:3: ( (lv_name_0_0= RULE_IDENT ) ) (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )? otherlv_3= '=' ( (lv_exp_4_0= ruleexpression ) )
            {
            // InternalAle.g:2938:3: ( (lv_name_0_0= RULE_IDENT ) )
            // InternalAle.g:2939:4: (lv_name_0_0= RULE_IDENT )
            {
            // InternalAle.g:2939:4: (lv_name_0_0= RULE_IDENT )
            // InternalAle.g:2940:5: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getBindingAccess().getNameIdentTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getBindingRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.emf.ecoretools.Ale.Ident");
              				
            }

            }


            }

            // InternalAle.g:2956:3: (otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==48) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalAle.g:2957:4: otherlv_1= ':' ( (lv_type_2_0= ruletypeLiteral ) )
                    {
                    otherlv_1=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getColonKeyword_1_0());
                      			
                    }
                    // InternalAle.g:2961:4: ( (lv_type_2_0= ruletypeLiteral ) )
                    // InternalAle.g:2962:5: (lv_type_2_0= ruletypeLiteral )
                    {
                    // InternalAle.g:2962:5: (lv_type_2_0= ruletypeLiteral )
                    // InternalAle.g:2963:6: lv_type_2_0= ruletypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBindingAccess().getTypeTypeLiteralParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_type_2_0=ruletypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBindingRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_2_0,
                      							"org.eclipse.emf.ecoretools.Ale.typeLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,59,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBindingAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalAle.g:2985:3: ( (lv_exp_4_0= ruleexpression ) )
            // InternalAle.g:2986:4: (lv_exp_4_0= ruleexpression )
            {
            // InternalAle.g:2986:4: (lv_exp_4_0= ruleexpression )
            // InternalAle.g:2987:5: lv_exp_4_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBindingAccess().getExpExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_4_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBindingRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_4_0,
              						"org.eclipse.emf.ecoretools.Ale.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebinding"


    // $ANTLR start "entryRuleaddOp"
    // InternalAle.g:3008:1: entryRuleaddOp returns [String current=null] : iv_ruleaddOp= ruleaddOp EOF ;
    public final String entryRuleaddOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleaddOp = null;


        try {
            // InternalAle.g:3008:45: (iv_ruleaddOp= ruleaddOp EOF )
            // InternalAle.g:3009:2: iv_ruleaddOp= ruleaddOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleaddOp=ruleaddOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleaddOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleaddOp"


    // $ANTLR start "ruleaddOp"
    // InternalAle.g:3015:1: ruleaddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleaddOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAle.g:3021:2: ( (kw= '+' | kw= '-' ) )
            // InternalAle.g:3022:2: (kw= '+' | kw= '-' )
            {
            // InternalAle.g:3022:2: (kw= '+' | kw= '-' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==60) ) {
                alt39=1;
            }
            else if ( (LA39_0==55) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalAle.g:3023:3: kw= '+'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:3029:3: kw= '-'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleaddOp"


    // $ANTLR start "entryRulecompOp"
    // InternalAle.g:3038:1: entryRulecompOp returns [String current=null] : iv_rulecompOp= rulecompOp EOF ;
    public final String entryRulecompOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulecompOp = null;


        try {
            // InternalAle.g:3038:46: (iv_rulecompOp= rulecompOp EOF )
            // InternalAle.g:3039:2: iv_rulecompOp= rulecompOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompOp=rulecompOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompOp"


    // $ANTLR start "rulecompOp"
    // InternalAle.g:3045:1: rulecompOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<=' | kw= '>=' | kw= '!=' | kw= '<>' | kw= '=' | kw= '==' | kw= '<' | kw= '>' ) ;
    public final AntlrDatatypeRuleToken rulecompOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAle.g:3051:2: ( (kw= '<=' | kw= '>=' | kw= '!=' | kw= '<>' | kw= '=' | kw= '==' | kw= '<' | kw= '>' ) )
            // InternalAle.g:3052:2: (kw= '<=' | kw= '>=' | kw= '!=' | kw= '<>' | kw= '=' | kw= '==' | kw= '<' | kw= '>' )
            {
            // InternalAle.g:3052:2: (kw= '<=' | kw= '>=' | kw= '!=' | kw= '<>' | kw= '=' | kw= '==' | kw= '<' | kw= '>' )
            int alt40=8;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt40=1;
                }
                break;
            case 62:
                {
                alt40=2;
                }
                break;
            case 63:
                {
                alt40=3;
                }
                break;
            case 64:
                {
                alt40=4;
                }
                break;
            case 59:
                {
                alt40=5;
                }
                break;
            case 65:
                {
                alt40=6;
                }
                break;
            case 66:
                {
                alt40=7;
                }
                break;
            case 67:
                {
                alt40=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalAle.g:3053:3: kw= '<='
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getLessThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:3059:3: kw= '>='
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAle.g:3065:3: kw= '!='
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getExclamationMarkEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAle.g:3071:3: kw= '<>'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getLessThanSignGreaterThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAle.g:3077:3: kw= '='
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAle.g:3083:3: kw= '=='
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAle.g:3089:3: kw= '<'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getLessThanSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAle.g:3095:3: kw= '>'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCompOpAccess().getGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompOp"


    // $ANTLR start "entryRulecollectionIterator"
    // InternalAle.g:3104:1: entryRulecollectionIterator returns [String current=null] : iv_rulecollectionIterator= rulecollectionIterator EOF ;
    public final String entryRulecollectionIterator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulecollectionIterator = null;


        try {
            // InternalAle.g:3104:58: (iv_rulecollectionIterator= rulecollectionIterator EOF )
            // InternalAle.g:3105:2: iv_rulecollectionIterator= rulecollectionIterator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionIteratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecollectionIterator=rulecollectionIterator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecollectionIterator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecollectionIterator"


    // $ANTLR start "rulecollectionIterator"
    // InternalAle.g:3111:1: rulecollectionIterator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'select' | kw= 'reject' | kw= 'collect' | kw= 'any' | kw= 'exists' | kw= 'forAll' | kw= 'isUnique' | kw= 'one' | kw= 'sortedBy' | kw= 'closure' ) ;
    public final AntlrDatatypeRuleToken rulecollectionIterator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAle.g:3117:2: ( (kw= 'select' | kw= 'reject' | kw= 'collect' | kw= 'any' | kw= 'exists' | kw= 'forAll' | kw= 'isUnique' | kw= 'one' | kw= 'sortedBy' | kw= 'closure' ) )
            // InternalAle.g:3118:2: (kw= 'select' | kw= 'reject' | kw= 'collect' | kw= 'any' | kw= 'exists' | kw= 'forAll' | kw= 'isUnique' | kw= 'one' | kw= 'sortedBy' | kw= 'closure' )
            {
            // InternalAle.g:3118:2: (kw= 'select' | kw= 'reject' | kw= 'collect' | kw= 'any' | kw= 'exists' | kw= 'forAll' | kw= 'isUnique' | kw= 'one' | kw= 'sortedBy' | kw= 'closure' )
            int alt41=10;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt41=1;
                }
                break;
            case 69:
                {
                alt41=2;
                }
                break;
            case 70:
                {
                alt41=3;
                }
                break;
            case 71:
                {
                alt41=4;
                }
                break;
            case 72:
                {
                alt41=5;
                }
                break;
            case 73:
                {
                alt41=6;
                }
                break;
            case 74:
                {
                alt41=7;
                }
                break;
            case 75:
                {
                alt41=8;
                }
                break;
            case 76:
                {
                alt41=9;
                }
                break;
            case 77:
                {
                alt41=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalAle.g:3119:3: kw= 'select'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getSelectKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:3125:3: kw= 'reject'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getRejectKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAle.g:3131:3: kw= 'collect'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getCollectKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAle.g:3137:3: kw= 'any'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getAnyKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAle.g:3143:3: kw= 'exists'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getExistsKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAle.g:3149:3: kw= 'forAll'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getForAllKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAle.g:3155:3: kw= 'isUnique'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getIsUniqueKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAle.g:3161:3: kw= 'one'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getOneKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalAle.g:3167:3: kw= 'sortedBy'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getSortedByKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalAle.g:3173:3: kw= 'closure'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionIteratorAccess().getClosureKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecollectionIterator"


    // $ANTLR start "entryRuleliteral"
    // InternalAle.g:3182:1: entryRuleliteral returns [EObject current=null] : iv_ruleliteral= ruleliteral EOF ;
    public final EObject entryRuleliteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteral = null;


        try {
            // InternalAle.g:3182:48: (iv_ruleliteral= ruleliteral EOF )
            // InternalAle.g:3183:2: iv_ruleliteral= ruleliteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteral=ruleliteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteral"


    // $ANTLR start "ruleliteral"
    // InternalAle.g:3189:1: ruleliteral returns [EObject current=null] : ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) | ( () ( (lv_value_3_0= RULE_INT ) ) ) | ( () ( (lv_value_5_0= RULE_REAL ) ) ) | ( () otherlv_7= 'true' ) | ( () otherlv_9= 'false' ) | ( () otherlv_11= 'null' ) | ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' ) | ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' ) | this_typeLiteral_24= ruletypeLiteral ) ;
    public final EObject ruleliteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token lv_value_3_0=null;
        Token lv_value_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject lv_params_14_0 = null;

        EObject lv_params_16_0 = null;

        EObject lv_params_20_0 = null;

        EObject lv_params_22_0 = null;

        EObject this_typeLiteral_24 = null;



        	enterRule();

        try {
            // InternalAle.g:3195:2: ( ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) | ( () ( (lv_value_3_0= RULE_INT ) ) ) | ( () ( (lv_value_5_0= RULE_REAL ) ) ) | ( () otherlv_7= 'true' ) | ( () otherlv_9= 'false' ) | ( () otherlv_11= 'null' ) | ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' ) | ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' ) | this_typeLiteral_24= ruletypeLiteral ) )
            // InternalAle.g:3196:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) | ( () ( (lv_value_3_0= RULE_INT ) ) ) | ( () ( (lv_value_5_0= RULE_REAL ) ) ) | ( () otherlv_7= 'true' ) | ( () otherlv_9= 'false' ) | ( () otherlv_11= 'null' ) | ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' ) | ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' ) | this_typeLiteral_24= ruletypeLiteral )
            {
            // InternalAle.g:3196:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) | ( () ( (lv_value_3_0= RULE_INT ) ) ) | ( () ( (lv_value_5_0= RULE_REAL ) ) ) | ( () otherlv_7= 'true' ) | ( () otherlv_9= 'false' ) | ( () otherlv_11= 'null' ) | ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' ) | ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' ) | this_typeLiteral_24= ruletypeLiteral )
            int alt46=9;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt46=1;
                }
                break;
            case RULE_INT:
                {
                alt46=2;
                }
                break;
            case RULE_REAL:
                {
                alt46=3;
                }
                break;
            case 78:
                {
                alt46=4;
                }
                break;
            case 79:
                {
                alt46=5;
                }
                break;
            case 80:
                {
                alt46=6;
                }
                break;
            case 81:
                {
                alt46=7;
                }
                break;
            case 82:
                {
                alt46=8;
                }
                break;
            case RULE_IDENT:
            case 25:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
                {
                alt46=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalAle.g:3197:3: ( () ( (lv_value_1_0= RULE_STRING ) ) )
                    {
                    // InternalAle.g:3197:3: ( () ( (lv_value_1_0= RULE_STRING ) ) )
                    // InternalAle.g:3198:4: () ( (lv_value_1_0= RULE_STRING ) )
                    {
                    // InternalAle.g:3198:4: ()
                    // InternalAle.g:3199:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getStringAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAle.g:3208:4: ( (lv_value_1_0= RULE_STRING ) )
                    // InternalAle.g:3209:5: (lv_value_1_0= RULE_STRING )
                    {
                    // InternalAle.g:3209:5: (lv_value_1_0= RULE_STRING )
                    // InternalAle.g:3210:6: lv_value_1_0= RULE_STRING
                    {
                    lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_1_0, grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.eclipse.emf.ecoretools.Ale.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAle.g:3228:3: ( () ( (lv_value_3_0= RULE_INT ) ) )
                    {
                    // InternalAle.g:3228:3: ( () ( (lv_value_3_0= RULE_INT ) ) )
                    // InternalAle.g:3229:4: () ( (lv_value_3_0= RULE_INT ) )
                    {
                    // InternalAle.g:3229:4: ()
                    // InternalAle.g:3230:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getIntAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAle.g:3239:4: ( (lv_value_3_0= RULE_INT ) )
                    // InternalAle.g:3240:5: (lv_value_3_0= RULE_INT )
                    {
                    // InternalAle.g:3240:5: (lv_value_3_0= RULE_INT )
                    // InternalAle.g:3241:6: lv_value_3_0= RULE_INT
                    {
                    lv_value_3_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_3_0, grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAle.g:3259:3: ( () ( (lv_value_5_0= RULE_REAL ) ) )
                    {
                    // InternalAle.g:3259:3: ( () ( (lv_value_5_0= RULE_REAL ) ) )
                    // InternalAle.g:3260:4: () ( (lv_value_5_0= RULE_REAL ) )
                    {
                    // InternalAle.g:3260:4: ()
                    // InternalAle.g:3261:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getRealAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAle.g:3270:4: ( (lv_value_5_0= RULE_REAL ) )
                    // InternalAle.g:3271:5: (lv_value_5_0= RULE_REAL )
                    {
                    // InternalAle.g:3271:5: (lv_value_5_0= RULE_REAL )
                    // InternalAle.g:3272:6: lv_value_5_0= RULE_REAL
                    {
                    lv_value_5_0=(Token)match(input,RULE_REAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_5_0, grammarAccess.getLiteralAccess().getValueRealTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_5_0,
                      							"org.eclipse.emf.ecoretools.Ale.Real");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAle.g:3290:3: ( () otherlv_7= 'true' )
                    {
                    // InternalAle.g:3290:3: ( () otherlv_7= 'true' )
                    // InternalAle.g:3291:4: () otherlv_7= 'true'
                    {
                    // InternalAle.g:3291:4: ()
                    // InternalAle.g:3292:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getTrueAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_7=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLiteralAccess().getTrueKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAle.g:3307:3: ( () otherlv_9= 'false' )
                    {
                    // InternalAle.g:3307:3: ( () otherlv_9= 'false' )
                    // InternalAle.g:3308:4: () otherlv_9= 'false'
                    {
                    // InternalAle.g:3308:4: ()
                    // InternalAle.g:3309:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getFalseAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_9=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getLiteralAccess().getFalseKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAle.g:3324:3: ( () otherlv_11= 'null' )
                    {
                    // InternalAle.g:3324:3: ( () otherlv_11= 'null' )
                    // InternalAle.g:3325:4: () otherlv_11= 'null'
                    {
                    // InternalAle.g:3325:4: ()
                    // InternalAle.g:3326:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getNullAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_11=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getLiteralAccess().getNullKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAle.g:3341:3: ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' )
                    {
                    // InternalAle.g:3341:3: ( () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}' )
                    // InternalAle.g:3342:4: () otherlv_13= 'Sequence{' ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )? otherlv_17= '}'
                    {
                    // InternalAle.g:3342:4: ()
                    // InternalAle.g:3343:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getSequenceAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_13=(Token)match(input,81,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getLiteralAccess().getSequenceKeyword_6_1());
                      			
                    }
                    // InternalAle.g:3356:4: ( ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )* )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( ((LA43_0>=RULE_IDENT && LA43_0<=RULE_INT)||(LA43_0>=RULE_STRING && LA43_0<=RULE_REAL)||LA43_0==25||LA43_0==29||LA43_0==43||(LA43_0>=54 && LA43_0<=55)||LA43_0==58||(LA43_0>=78 && LA43_0<=88)) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalAle.g:3357:5: ( (lv_params_14_0= ruleexpression ) ) (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )*
                            {
                            // InternalAle.g:3357:5: ( (lv_params_14_0= ruleexpression ) )
                            // InternalAle.g:3358:6: (lv_params_14_0= ruleexpression )
                            {
                            // InternalAle.g:3358:6: (lv_params_14_0= ruleexpression )
                            // InternalAle.g:3359:7: lv_params_14_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_49);
                            lv_params_14_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLiteralRule());
                              							}
                              							add(
                              								current,
                              								"params",
                              								lv_params_14_0,
                              								"org.eclipse.emf.ecoretools.Ale.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalAle.g:3376:5: (otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) ) )*
                            loop42:
                            do {
                                int alt42=2;
                                int LA42_0 = input.LA(1);

                                if ( (LA42_0==24) ) {
                                    alt42=1;
                                }


                                switch (alt42) {
                            	case 1 :
                            	    // InternalAle.g:3377:6: otherlv_15= ',' ( (lv_params_16_0= ruleexpression ) )
                            	    {
                            	    otherlv_15=(Token)match(input,24,FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_15, grammarAccess.getLiteralAccess().getCommaKeyword_6_2_1_0());
                            	      					
                            	    }
                            	    // InternalAle.g:3381:6: ( (lv_params_16_0= ruleexpression ) )
                            	    // InternalAle.g:3382:7: (lv_params_16_0= ruleexpression )
                            	    {
                            	    // InternalAle.g:3382:7: (lv_params_16_0= ruleexpression )
                            	    // InternalAle.g:3383:8: lv_params_16_0= ruleexpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_2_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_49);
                            	    lv_params_16_0=ruleexpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getLiteralRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"params",
                            	      									lv_params_16_0,
                            	      									"org.eclipse.emf.ecoretools.Ale.expression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop42;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAle.g:3408:3: ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' )
                    {
                    // InternalAle.g:3408:3: ( () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}' )
                    // InternalAle.g:3409:4: () otherlv_19= 'OrderedSet{' ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )? otherlv_23= '}'
                    {
                    // InternalAle.g:3409:4: ()
                    // InternalAle.g:3410:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getOrderedSetAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_19=(Token)match(input,82,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getLiteralAccess().getOrderedSetKeyword_7_1());
                      			
                    }
                    // InternalAle.g:3423:4: ( ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )* )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( ((LA45_0>=RULE_IDENT && LA45_0<=RULE_INT)||(LA45_0>=RULE_STRING && LA45_0<=RULE_REAL)||LA45_0==25||LA45_0==29||LA45_0==43||(LA45_0>=54 && LA45_0<=55)||LA45_0==58||(LA45_0>=78 && LA45_0<=88)) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalAle.g:3424:5: ( (lv_params_20_0= ruleexpression ) ) (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )*
                            {
                            // InternalAle.g:3424:5: ( (lv_params_20_0= ruleexpression ) )
                            // InternalAle.g:3425:6: (lv_params_20_0= ruleexpression )
                            {
                            // InternalAle.g:3425:6: (lv_params_20_0= ruleexpression )
                            // InternalAle.g:3426:7: lv_params_20_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_49);
                            lv_params_20_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLiteralRule());
                              							}
                              							add(
                              								current,
                              								"params",
                              								lv_params_20_0,
                              								"org.eclipse.emf.ecoretools.Ale.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalAle.g:3443:5: (otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) ) )*
                            loop44:
                            do {
                                int alt44=2;
                                int LA44_0 = input.LA(1);

                                if ( (LA44_0==24) ) {
                                    alt44=1;
                                }


                                switch (alt44) {
                            	case 1 :
                            	    // InternalAle.g:3444:6: otherlv_21= ',' ( (lv_params_22_0= ruleexpression ) )
                            	    {
                            	    otherlv_21=(Token)match(input,24,FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_21, grammarAccess.getLiteralAccess().getCommaKeyword_7_2_1_0());
                            	      					
                            	    }
                            	    // InternalAle.g:3448:6: ( (lv_params_22_0= ruleexpression ) )
                            	    // InternalAle.g:3449:7: (lv_params_22_0= ruleexpression )
                            	    {
                            	    // InternalAle.g:3449:7: (lv_params_22_0= ruleexpression )
                            	    // InternalAle.g:3450:8: lv_params_22_0= ruleexpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_2_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_49);
                            	    lv_params_22_0=ruleexpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getLiteralRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"params",
                            	      									lv_params_22_0,
                            	      									"org.eclipse.emf.ecoretools.Ale.expression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop44;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_23=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_7_3());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAle.g:3475:3: this_typeLiteral_24= ruletypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getTypeLiteralParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_typeLiteral_24=ruletypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_typeLiteral_24;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteral"


    // $ANTLR start "entryRuletypeLiteral"
    // InternalAle.g:3490:1: entryRuletypeLiteral returns [EObject current=null] : iv_ruletypeLiteral= ruletypeLiteral EOF ;
    public final EObject entryRuletypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeLiteral = null;


        try {
            // InternalAle.g:3490:52: (iv_ruletypeLiteral= ruletypeLiteral EOF )
            // InternalAle.g:3491:2: iv_ruletypeLiteral= ruletypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeLiteral=ruletypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeLiteral"


    // $ANTLR start "ruletypeLiteral"
    // InternalAle.g:3497:1: ruletypeLiteral returns [EObject current=null] : ( ( () otherlv_1= 'String' ) | ( () otherlv_3= 'Integer' ) | ( () otherlv_5= 'Real' ) | ( () otherlv_7= 'Boolean' ) | ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' ) | ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' ) | this_classifierTypeRule_16= ruleclassifierTypeRule | ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' ) ) ;
    public final EObject ruletypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_type_10_0 = null;

        EObject lv_type_14_0 = null;

        EObject this_classifierTypeRule_16 = null;

        EObject lv_types_19_0 = null;

        EObject lv_types_21_0 = null;



        	enterRule();

        try {
            // InternalAle.g:3503:2: ( ( ( () otherlv_1= 'String' ) | ( () otherlv_3= 'Integer' ) | ( () otherlv_5= 'Real' ) | ( () otherlv_7= 'Boolean' ) | ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' ) | ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' ) | this_classifierTypeRule_16= ruleclassifierTypeRule | ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' ) ) )
            // InternalAle.g:3504:2: ( ( () otherlv_1= 'String' ) | ( () otherlv_3= 'Integer' ) | ( () otherlv_5= 'Real' ) | ( () otherlv_7= 'Boolean' ) | ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' ) | ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' ) | this_classifierTypeRule_16= ruleclassifierTypeRule | ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' ) )
            {
            // InternalAle.g:3504:2: ( ( () otherlv_1= 'String' ) | ( () otherlv_3= 'Integer' ) | ( () otherlv_5= 'Real' ) | ( () otherlv_7= 'Boolean' ) | ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' ) | ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' ) | this_classifierTypeRule_16= ruleclassifierTypeRule | ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' ) )
            int alt48=8;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt48=1;
                }
                break;
            case 84:
                {
                alt48=2;
                }
                break;
            case 85:
                {
                alt48=3;
                }
                break;
            case 86:
                {
                alt48=4;
                }
                break;
            case 87:
                {
                alt48=5;
                }
                break;
            case 88:
                {
                alt48=6;
                }
                break;
            case RULE_IDENT:
                {
                alt48=7;
                }
                break;
            case 25:
                {
                alt48=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalAle.g:3505:3: ( () otherlv_1= 'String' )
                    {
                    // InternalAle.g:3505:3: ( () otherlv_1= 'String' )
                    // InternalAle.g:3506:4: () otherlv_1= 'String'
                    {
                    // InternalAle.g:3506:4: ()
                    // InternalAle.g:3507:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getStringTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeLiteralAccess().getStringKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAle.g:3522:3: ( () otherlv_3= 'Integer' )
                    {
                    // InternalAle.g:3522:3: ( () otherlv_3= 'Integer' )
                    // InternalAle.g:3523:4: () otherlv_3= 'Integer'
                    {
                    // InternalAle.g:3523:4: ()
                    // InternalAle.g:3524:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getIntTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeLiteralAccess().getIntegerKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAle.g:3539:3: ( () otherlv_5= 'Real' )
                    {
                    // InternalAle.g:3539:3: ( () otherlv_5= 'Real' )
                    // InternalAle.g:3540:4: () otherlv_5= 'Real'
                    {
                    // InternalAle.g:3540:4: ()
                    // InternalAle.g:3541:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getRealTypeAction_2_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTypeLiteralAccess().getRealKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAle.g:3556:3: ( () otherlv_7= 'Boolean' )
                    {
                    // InternalAle.g:3556:3: ( () otherlv_7= 'Boolean' )
                    // InternalAle.g:3557:4: () otherlv_7= 'Boolean'
                    {
                    // InternalAle.g:3557:4: ()
                    // InternalAle.g:3558:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getBoolTypeAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_7=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getTypeLiteralAccess().getBooleanKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAle.g:3573:3: ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' )
                    {
                    // InternalAle.g:3573:3: ( () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')' )
                    // InternalAle.g:3574:4: () otherlv_9= 'Sequence(' ( (lv_type_10_0= ruletypeLiteral ) ) otherlv_11= ')'
                    {
                    // InternalAle.g:3574:4: ()
                    // InternalAle.g:3575:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getSeqTypeAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_9=(Token)match(input,87,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getTypeLiteralAccess().getSequenceKeyword_4_1());
                      			
                    }
                    // InternalAle.g:3588:4: ( (lv_type_10_0= ruletypeLiteral ) )
                    // InternalAle.g:3589:5: (lv_type_10_0= ruletypeLiteral )
                    {
                    // InternalAle.g:3589:5: (lv_type_10_0= ruletypeLiteral )
                    // InternalAle.g:3590:6: lv_type_10_0= ruletypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_type_10_0=ruletypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_10_0,
                      							"org.eclipse.emf.ecoretools.Ale.typeLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAle.g:3613:3: ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' )
                    {
                    // InternalAle.g:3613:3: ( () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')' )
                    // InternalAle.g:3614:4: () otherlv_13= 'OrderedSet(' ( (lv_type_14_0= ruletypeLiteral ) ) otherlv_15= ')'
                    {
                    // InternalAle.g:3614:4: ()
                    // InternalAle.g:3615:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getSetTypeAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_13=(Token)match(input,88,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getTypeLiteralAccess().getOrderedSetKeyword_5_1());
                      			
                    }
                    // InternalAle.g:3628:4: ( (lv_type_14_0= ruletypeLiteral ) )
                    // InternalAle.g:3629:5: (lv_type_14_0= ruletypeLiteral )
                    {
                    // InternalAle.g:3629:5: (lv_type_14_0= ruletypeLiteral )
                    // InternalAle.g:3630:6: lv_type_14_0= ruletypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_type_14_0=ruletypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_14_0,
                      							"org.eclipse.emf.ecoretools.Ale.typeLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_5_3());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAle.g:3653:3: this_classifierTypeRule_16= ruleclassifierTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLiteralAccess().getClassifierTypeRuleParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_classifierTypeRule_16=ruleclassifierTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_classifierTypeRule_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAle.g:3665:3: ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' )
                    {
                    // InternalAle.g:3665:3: ( () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}' )
                    // InternalAle.g:3666:4: () otherlv_18= '{' ( (lv_types_19_0= ruleclassifierTypeRule ) ) (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )* otherlv_22= '}'
                    {
                    // InternalAle.g:3666:4: ()
                    // InternalAle.g:3667:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLiteralAccess().getClassifierSetTypeAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getTypeLiteralAccess().getLeftCurlyBracketKeyword_7_1());
                      			
                    }
                    // InternalAle.g:3680:4: ( (lv_types_19_0= ruleclassifierTypeRule ) )
                    // InternalAle.g:3681:5: (lv_types_19_0= ruleclassifierTypeRule )
                    {
                    // InternalAle.g:3681:5: (lv_types_19_0= ruleclassifierTypeRule )
                    // InternalAle.g:3682:6: lv_types_19_0= ruleclassifierTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_types_19_0=ruleclassifierTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
                      						}
                      						add(
                      							current,
                      							"types",
                      							lv_types_19_0,
                      							"org.eclipse.emf.ecoretools.Ale.classifierTypeRule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAle.g:3699:4: (otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==49) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalAle.g:3700:5: otherlv_20= '|' ( (lv_types_21_0= ruleclassifierTypeRule ) )
                    	    {
                    	    otherlv_20=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getTypeLiteralAccess().getVerticalLineKeyword_7_3_0());
                    	      				
                    	    }
                    	    // InternalAle.g:3704:5: ( (lv_types_21_0= ruleclassifierTypeRule ) )
                    	    // InternalAle.g:3705:6: (lv_types_21_0= ruleclassifierTypeRule )
                    	    {
                    	    // InternalAle.g:3705:6: (lv_types_21_0= ruleclassifierTypeRule )
                    	    // InternalAle.g:3706:7: lv_types_21_0= ruleclassifierTypeRule
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_types_21_0=ruleclassifierTypeRule();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"types",
                    	      								lv_types_21_0,
                    	      								"org.eclipse.emf.ecoretools.Ale.classifierTypeRule");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getTypeLiteralAccess().getRightCurlyBracketKeyword_7_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeLiteral"


    // $ANTLR start "entryRuleclassifierTypeRule"
    // InternalAle.g:3733:1: entryRuleclassifierTypeRule returns [EObject current=null] : iv_ruleclassifierTypeRule= ruleclassifierTypeRule EOF ;
    public final EObject entryRuleclassifierTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleclassifierTypeRule = null;


        try {
            // InternalAle.g:3733:59: (iv_ruleclassifierTypeRule= ruleclassifierTypeRule EOF )
            // InternalAle.g:3734:2: iv_ruleclassifierTypeRule= ruleclassifierTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleclassifierTypeRule=ruleclassifierTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleclassifierTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleclassifierTypeRule"


    // $ANTLR start "ruleclassifierTypeRule"
    // InternalAle.g:3740:1: ruleclassifierTypeRule returns [EObject current=null] : ( () this_Ident_1= RULE_IDENT otherlv_2= '::' this_Ident_3= RULE_IDENT ) ;
    public final EObject ruleclassifierTypeRule() throws RecognitionException {
        EObject current = null;

        Token this_Ident_1=null;
        Token otherlv_2=null;
        Token this_Ident_3=null;


        	enterRule();

        try {
            // InternalAle.g:3746:2: ( ( () this_Ident_1= RULE_IDENT otherlv_2= '::' this_Ident_3= RULE_IDENT ) )
            // InternalAle.g:3747:2: ( () this_Ident_1= RULE_IDENT otherlv_2= '::' this_Ident_3= RULE_IDENT )
            {
            // InternalAle.g:3747:2: ( () this_Ident_1= RULE_IDENT otherlv_2= '::' this_Ident_3= RULE_IDENT )
            // InternalAle.g:3748:3: () this_Ident_1= RULE_IDENT otherlv_2= '::' this_Ident_3= RULE_IDENT
            {
            // InternalAle.g:3748:3: ()
            // InternalAle.g:3749:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassifierTypeRuleAccess().getClassifierTypeAction_0(),
              					current);
              			
            }

            }

            this_Ident_1=(Token)match(input,RULE_IDENT,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_Ident_1, grammarAccess.getClassifierTypeRuleAccess().getIdentTerminalRuleCall_1());
              		
            }
            otherlv_2=(Token)match(input,89,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getClassifierTypeRuleAccess().getColonColonKeyword_2());
              		
            }
            this_Ident_3=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_Ident_3, grammarAccess.getClassifierTypeRuleAccess().getIdentTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleclassifierTypeRule"


    // $ANTLR start "entryRulerType"
    // InternalAle.g:3774:1: entryRulerType returns [EObject current=null] : iv_rulerType= rulerType EOF ;
    public final EObject entryRulerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerType = null;


        try {
            // InternalAle.g:3774:46: (iv_rulerType= rulerType EOF )
            // InternalAle.g:3775:2: iv_rulerType= rulerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerType=rulerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerType"


    // $ANTLR start "rulerType"
    // InternalAle.g:3781:1: rulerType returns [EObject current=null] : (this_typeLiteral_0= ruletypeLiteral | ( (lv_name_1_0= rulerQIdent ) ) ) ;
    public final EObject rulerType() throws RecognitionException {
        EObject current = null;

        EObject this_typeLiteral_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalAle.g:3787:2: ( (this_typeLiteral_0= ruletypeLiteral | ( (lv_name_1_0= rulerQIdent ) ) ) )
            // InternalAle.g:3788:2: (this_typeLiteral_0= ruletypeLiteral | ( (lv_name_1_0= rulerQIdent ) ) )
            {
            // InternalAle.g:3788:2: (this_typeLiteral_0= ruletypeLiteral | ( (lv_name_1_0= rulerQIdent ) ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==25||(LA49_0>=83 && LA49_0<=88)) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_IDENT) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==89) ) {
                    int LA49_3 = input.LA(3);

                    if ( (LA49_3==RULE_IDENT) ) {
                        int LA49_5 = input.LA(4);

                        if ( (synpred95_InternalAle()) ) {
                            alt49=1;
                        }
                        else if ( (true) ) {
                            alt49=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 49, 5, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 49, 3, input);

                        throw nvae;
                    }
                }
                else if ( (LA49_2==EOF||LA49_2==RULE_IDENT) ) {
                    alt49=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalAle.g:3789:3: this_typeLiteral_0= ruletypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRTypeAccess().getTypeLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_typeLiteral_0=ruletypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_typeLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAle.g:3801:3: ( (lv_name_1_0= rulerQIdent ) )
                    {
                    // InternalAle.g:3801:3: ( (lv_name_1_0= rulerQIdent ) )
                    // InternalAle.g:3802:4: (lv_name_1_0= rulerQIdent )
                    {
                    // InternalAle.g:3802:4: (lv_name_1_0= rulerQIdent )
                    // InternalAle.g:3803:5: lv_name_1_0= rulerQIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRTypeAccess().getNameRQIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=rulerQIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRTypeRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.emf.ecoretools.Ale.rQIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerType"


    // $ANTLR start "entryRulerQIdent"
    // InternalAle.g:3824:1: entryRulerQIdent returns [String current=null] : iv_rulerQIdent= rulerQIdent EOF ;
    public final String entryRulerQIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulerQIdent = null;


        try {
            // InternalAle.g:3824:47: (iv_rulerQIdent= rulerQIdent EOF )
            // InternalAle.g:3825:2: iv_rulerQIdent= rulerQIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRQIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerQIdent=rulerQIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerQIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerQIdent"


    // $ANTLR start "rulerQIdent"
    // InternalAle.g:3831:1: rulerQIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Ident_0= RULE_IDENT (kw= '::' this_Ident_2= RULE_IDENT )* ) ;
    public final AntlrDatatypeRuleToken rulerQIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_Ident_0=null;
        Token kw=null;
        Token this_Ident_2=null;


        	enterRule();

        try {
            // InternalAle.g:3837:2: ( (this_Ident_0= RULE_IDENT (kw= '::' this_Ident_2= RULE_IDENT )* ) )
            // InternalAle.g:3838:2: (this_Ident_0= RULE_IDENT (kw= '::' this_Ident_2= RULE_IDENT )* )
            {
            // InternalAle.g:3838:2: (this_Ident_0= RULE_IDENT (kw= '::' this_Ident_2= RULE_IDENT )* )
            // InternalAle.g:3839:3: this_Ident_0= RULE_IDENT (kw= '::' this_Ident_2= RULE_IDENT )*
            {
            this_Ident_0=(Token)match(input,RULE_IDENT,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Ident_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_Ident_0, grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_0());
              		
            }
            // InternalAle.g:3846:3: (kw= '::' this_Ident_2= RULE_IDENT )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==89) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalAle.g:3847:4: kw= '::' this_Ident_2= RULE_IDENT
            	    {
            	    kw=(Token)match(input,89,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getRQIdentAccess().getColonColonKeyword_1_0());
            	      			
            	    }
            	    this_Ident_2=(Token)match(input,RULE_IDENT,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_Ident_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_Ident_2, grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerQIdent"


    // $ANTLR start "entryRulerQualified"
    // InternalAle.g:3864:1: entryRulerQualified returns [String current=null] : iv_rulerQualified= rulerQualified EOF ;
    public final String entryRulerQualified() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulerQualified = null;


        try {
            // InternalAle.g:3864:50: (iv_rulerQualified= rulerQualified EOF )
            // InternalAle.g:3865:2: iv_rulerQualified= rulerQualified EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRQualifiedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerQualified=rulerQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerQualified.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerQualified"


    // $ANTLR start "rulerQualified"
    // InternalAle.g:3871:1: rulerQualified returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Ident_0= RULE_IDENT (kw= '.' this_Ident_2= RULE_IDENT )* ) ;
    public final AntlrDatatypeRuleToken rulerQualified() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_Ident_0=null;
        Token kw=null;
        Token this_Ident_2=null;


        	enterRule();

        try {
            // InternalAle.g:3877:2: ( (this_Ident_0= RULE_IDENT (kw= '.' this_Ident_2= RULE_IDENT )* ) )
            // InternalAle.g:3878:2: (this_Ident_0= RULE_IDENT (kw= '.' this_Ident_2= RULE_IDENT )* )
            {
            // InternalAle.g:3878:2: (this_Ident_0= RULE_IDENT (kw= '.' this_Ident_2= RULE_IDENT )* )
            // InternalAle.g:3879:3: this_Ident_0= RULE_IDENT (kw= '.' this_Ident_2= RULE_IDENT )*
            {
            this_Ident_0=(Token)match(input,RULE_IDENT,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Ident_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_Ident_0, grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_0());
              		
            }
            // InternalAle.g:3886:3: (kw= '.' this_Ident_2= RULE_IDENT )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==46) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalAle.g:3887:4: kw= '.' this_Ident_2= RULE_IDENT
            	    {
            	    kw=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getRQualifiedAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_Ident_2=(Token)match(input,RULE_IDENT,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_Ident_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_Ident_2, grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerQualified"

    // $ANTLR start synpred21_InternalAle
    public final void synpred21_InternalAle_fragment() throws RecognitionException {   
        EObject this_rVarDecl_0 = null;


        // InternalAle.g:1077:3: (this_rVarDecl_0= rulerVarDecl )
        // InternalAle.g:1077:3: this_rVarDecl_0= rulerVarDecl
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_rVarDecl_0=rulerVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_InternalAle

    // $ANTLR start synpred22_InternalAle
    public final void synpred22_InternalAle_fragment() throws RecognitionException {   
        EObject this_rAssign_1 = null;


        // InternalAle.g:1089:3: (this_rAssign_1= rulerAssign )
        // InternalAle.g:1089:3: this_rAssign_1= rulerAssign
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_rAssign_1=rulerAssign();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred22_InternalAle

    // $ANTLR start synpred23_InternalAle
    public final void synpred23_InternalAle_fragment() throws RecognitionException {   
        EObject this_rInsert_2 = null;


        // InternalAle.g:1101:3: (this_rInsert_2= rulerInsert )
        // InternalAle.g:1101:3: this_rInsert_2= rulerInsert
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_rInsert_2=rulerInsert();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_InternalAle

    // $ANTLR start synpred24_InternalAle
    public final void synpred24_InternalAle_fragment() throws RecognitionException {   
        EObject this_rRemove_3 = null;


        // InternalAle.g:1113:3: (this_rRemove_3= rulerRemove )
        // InternalAle.g:1113:3: this_rRemove_3= rulerRemove
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_rRemove_3=rulerRemove();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_InternalAle

    // $ANTLR start synpred29_InternalAle
    public final void synpred29_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


        // InternalAle.g:1669:5: ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) )
        // InternalAle.g:1669:5: ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' )
        {
        // InternalAle.g:1669:5: ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' )
        // InternalAle.g:1670:6: ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';'
        {
        // InternalAle.g:1670:6: ( (lv_statements_2_0= rulerSimpleStatement ) )
        // InternalAle.g:1671:7: (lv_statements_2_0= rulerSimpleStatement )
        {
        // InternalAle.g:1671:7: (lv_statements_2_0= rulerSimpleStatement )
        // InternalAle.g:1672:8: lv_statements_2_0= rulerSimpleStatement
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_4);
        lv_statements_2_0=rulerSimpleStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalAle

    // $ANTLR start synpred30_InternalAle
    public final void synpred30_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_statements_5_0 = null;


        // InternalAle.g:1716:5: ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) )
        // InternalAle.g:1716:5: ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' )
        {
        // InternalAle.g:1716:5: ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' )
        // InternalAle.g:1717:6: ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';'
        {
        // InternalAle.g:1717:6: ( (lv_statements_5_0= rulerSimpleStatement ) )
        // InternalAle.g:1718:7: (lv_statements_5_0= rulerSimpleStatement )
        {
        // InternalAle.g:1718:7: (lv_statements_5_0= rulerSimpleStatement )
        // InternalAle.g:1719:8: lv_statements_5_0= rulerSimpleStatement
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_1_0_0_0());
          							
        }
        pushFollow(FOLLOW_4);
        lv_statements_5_0=rulerSimpleStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_6=(Token)match(input,16,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalAle

    // $ANTLR start synpred31_InternalAle
    public final void synpred31_InternalAle_fragment() throws RecognitionException {   
        EObject lv_statements_7_0 = null;


        // InternalAle.g:1742:5: ( ( (lv_statements_7_0= rulerBlockStatement ) ) )
        // InternalAle.g:1742:5: ( (lv_statements_7_0= rulerBlockStatement ) )
        {
        // InternalAle.g:1742:5: ( (lv_statements_7_0= rulerBlockStatement ) )
        // InternalAle.g:1743:6: (lv_statements_7_0= rulerBlockStatement )
        {
        // InternalAle.g:1743:6: (lv_statements_7_0= rulerBlockStatement )
        // InternalAle.g:1744:7: lv_statements_7_0= rulerBlockStatement
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_statements_7_0=rulerBlockStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred31_InternalAle

    // $ANTLR start synpred36_InternalAle
    public final void synpred36_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_params_5_0 = null;

        EObject lv_params_7_0 = null;


        // InternalAle.g:1997:4: ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) )
        // InternalAle.g:1997:4: ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' )
        {
        // InternalAle.g:1997:4: ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' )
        // InternalAle.g:1998:5: () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')'
        {
        // InternalAle.g:1998:5: ()
        // InternalAle.g:1999:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_2=(Token)match(input,46,FOLLOW_3); if (state.failed) return ;
        // InternalAle.g:2012:5: ( (lv_name_3_0= RULE_IDENT ) )
        // InternalAle.g:2013:6: (lv_name_3_0= RULE_IDENT )
        {
        // InternalAle.g:2013:6: (lv_name_3_0= RULE_IDENT )
        // InternalAle.g:2014:7: lv_name_3_0= RULE_IDENT
        {
        lv_name_3_0=(Token)match(input,RULE_IDENT,FOLLOW_18); if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,29,FOLLOW_37); if (state.failed) return ;
        // InternalAle.g:2034:5: ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )?
        int alt59=2;
        int LA59_0 = input.LA(1);

        if ( ((LA59_0>=RULE_IDENT && LA59_0<=RULE_INT)||(LA59_0>=RULE_STRING && LA59_0<=RULE_REAL)||LA59_0==25||LA59_0==29||LA59_0==43||(LA59_0>=54 && LA59_0<=55)||LA59_0==58||(LA59_0>=78 && LA59_0<=88)) ) {
            alt59=1;
        }
        switch (alt59) {
            case 1 :
                // InternalAle.g:2035:6: ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )*
                {
                // InternalAle.g:2035:6: ( (lv_params_5_0= ruleexpression ) )
                // InternalAle.g:2036:7: (lv_params_5_0= ruleexpression )
                {
                // InternalAle.g:2036:7: (lv_params_5_0= ruleexpression )
                // InternalAle.g:2037:8: lv_params_5_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0());
                  							
                }
                pushFollow(FOLLOW_20);
                lv_params_5_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalAle.g:2054:6: (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )*
                loop58:
                do {
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==24) ) {
                        alt58=1;
                    }


                    switch (alt58) {
                	case 1 :
                	    // InternalAle.g:2055:7: otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) )
                	    {
                	    otherlv_6=(Token)match(input,24,FOLLOW_22); if (state.failed) return ;
                	    // InternalAle.g:2059:7: ( (lv_params_7_0= ruleexpression ) )
                	    // InternalAle.g:2060:8: (lv_params_7_0= ruleexpression )
                	    {
                	    // InternalAle.g:2060:8: (lv_params_7_0= ruleexpression )
                	    // InternalAle.g:2061:9: lv_params_7_0= ruleexpression
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_20);
                	    lv_params_7_0=ruleexpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop58;
                    }
                } while (true);


                }
                break;

        }

        otherlv_8=(Token)match(input,30,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalAle

    // $ANTLR start synpred37_InternalAle
    public final void synpred37_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token lv_feature_11_0=null;

        // InternalAle.g:2086:4: ( ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) )
        // InternalAle.g:2086:4: ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) )
        {
        // InternalAle.g:2086:4: ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) )
        // InternalAle.g:2087:5: () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) )
        {
        // InternalAle.g:2087:5: ()
        // InternalAle.g:2088:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_10=(Token)match(input,46,FOLLOW_3); if (state.failed) return ;
        // InternalAle.g:2101:5: ( (lv_feature_11_0= RULE_IDENT ) )
        // InternalAle.g:2102:6: (lv_feature_11_0= RULE_IDENT )
        {
        // InternalAle.g:2102:6: (lv_feature_11_0= RULE_IDENT )
        // InternalAle.g:2103:7: lv_feature_11_0= RULE_IDENT
        {
        lv_feature_11_0=(Token)match(input,RULE_IDENT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred37_InternalAle

    // $ANTLR start synpred42_InternalAle
    public final void synpred42_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_varName_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_14_0 = null;

        EObject lv_varType_18_0 = null;

        EObject lv_lambda_20_0 = null;

        EObject lv_params_24_0 = null;

        EObject lv_params_26_0 = null;


        // InternalAle.g:2121:4: ( ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) )
        // InternalAle.g:2121:4: ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) )
        {
        // InternalAle.g:2121:4: ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) )
        // InternalAle.g:2122:5: () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) )
        {
        // InternalAle.g:2122:5: ()
        // InternalAle.g:2123:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_13=(Token)match(input,47,FOLLOW_38); if (state.failed) return ;
        // InternalAle.g:2136:5: ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) )
        int alt65=2;
        int LA65_0 = input.LA(1);

        if ( ((LA65_0>=68 && LA65_0<=77)) ) {
            alt65=1;
        }
        else if ( (LA65_0==RULE_IDENT) ) {
            alt65=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 65, 0, input);

            throw nvae;
        }
        switch (alt65) {
            case 1 :
                // InternalAle.g:2137:6: ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' )
                {
                // InternalAle.g:2137:6: ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' )
                // InternalAle.g:2138:7: ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')'
                {
                // InternalAle.g:2138:7: ( (lv_name_14_0= rulecollectionIterator ) )
                // InternalAle.g:2139:8: (lv_name_14_0= rulecollectionIterator )
                {
                // InternalAle.g:2139:8: (lv_name_14_0= rulecollectionIterator )
                // InternalAle.g:2140:9: lv_name_14_0= rulecollectionIterator
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getExpressionAccess().getNameCollectionIteratorParserRuleCall_1_2_2_0_0_0());
                  								
                }
                pushFollow(FOLLOW_18);
                lv_name_14_0=rulecollectionIterator();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_15=(Token)match(input,29,FOLLOW_3); if (state.failed) return ;
                // InternalAle.g:2161:7: ( (lv_varName_16_0= RULE_IDENT ) )
                // InternalAle.g:2162:8: (lv_varName_16_0= RULE_IDENT )
                {
                // InternalAle.g:2162:8: (lv_varName_16_0= RULE_IDENT )
                // InternalAle.g:2163:9: lv_varName_16_0= RULE_IDENT
                {
                lv_varName_16_0=(Token)match(input,RULE_IDENT,FOLLOW_39); if (state.failed) return ;

                }


                }

                // InternalAle.g:2179:7: (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )?
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==48) ) {
                    alt62=1;
                }
                switch (alt62) {
                    case 1 :
                        // InternalAle.g:2180:8: otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) )
                        {
                        otherlv_17=(Token)match(input,48,FOLLOW_40); if (state.failed) return ;
                        // InternalAle.g:2184:8: ( (lv_varType_18_0= ruletypeLiteral ) )
                        // InternalAle.g:2185:9: (lv_varType_18_0= ruletypeLiteral )
                        {
                        // InternalAle.g:2185:9: (lv_varType_18_0= ruletypeLiteral )
                        // InternalAle.g:2186:10: lv_varType_18_0= ruletypeLiteral
                        {
                        if ( state.backtracking==0 ) {

                          										newCompositeNode(grammarAccess.getExpressionAccess().getVarTypeTypeLiteralParserRuleCall_1_2_2_0_3_1_0());
                          									
                        }
                        pushFollow(FOLLOW_41);
                        lv_varType_18_0=ruletypeLiteral();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }

                otherlv_19=(Token)match(input,49,FOLLOW_22); if (state.failed) return ;
                // InternalAle.g:2208:7: ( (lv_lambda_20_0= ruleexpression ) )
                // InternalAle.g:2209:8: (lv_lambda_20_0= ruleexpression )
                {
                // InternalAle.g:2209:8: (lv_lambda_20_0= ruleexpression )
                // InternalAle.g:2210:9: lv_lambda_20_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getExpressionAccess().getLambdaExpressionParserRuleCall_1_2_2_0_5_0());
                  								
                }
                pushFollow(FOLLOW_31);
                lv_lambda_20_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_21=(Token)match(input,30,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // InternalAle.g:2233:6: ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' )
                {
                // InternalAle.g:2233:6: ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' )
                // InternalAle.g:2234:7: ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')'
                {
                // InternalAle.g:2234:7: ( (lv_name_22_0= RULE_IDENT ) )
                // InternalAle.g:2235:8: (lv_name_22_0= RULE_IDENT )
                {
                // InternalAle.g:2235:8: (lv_name_22_0= RULE_IDENT )
                // InternalAle.g:2236:9: lv_name_22_0= RULE_IDENT
                {
                lv_name_22_0=(Token)match(input,RULE_IDENT,FOLLOW_18); if (state.failed) return ;

                }


                }

                otherlv_23=(Token)match(input,29,FOLLOW_37); if (state.failed) return ;
                // InternalAle.g:2256:7: ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )?
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=RULE_IDENT && LA64_0<=RULE_INT)||(LA64_0>=RULE_STRING && LA64_0<=RULE_REAL)||LA64_0==25||LA64_0==29||LA64_0==43||(LA64_0>=54 && LA64_0<=55)||LA64_0==58||(LA64_0>=78 && LA64_0<=88)) ) {
                    alt64=1;
                }
                switch (alt64) {
                    case 1 :
                        // InternalAle.g:2257:8: ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )*
                        {
                        // InternalAle.g:2257:8: ( (lv_params_24_0= ruleexpression ) )
                        // InternalAle.g:2258:9: (lv_params_24_0= ruleexpression )
                        {
                        // InternalAle.g:2258:9: (lv_params_24_0= ruleexpression )
                        // InternalAle.g:2259:10: lv_params_24_0= ruleexpression
                        {
                        if ( state.backtracking==0 ) {

                          										newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_0_0());
                          									
                        }
                        pushFollow(FOLLOW_20);
                        lv_params_24_0=ruleexpression();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }

                        // InternalAle.g:2276:8: (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )*
                        loop63:
                        do {
                            int alt63=2;
                            int LA63_0 = input.LA(1);

                            if ( (LA63_0==24) ) {
                                alt63=1;
                            }


                            switch (alt63) {
                        	case 1 :
                        	    // InternalAle.g:2277:9: otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) )
                        	    {
                        	    otherlv_25=(Token)match(input,24,FOLLOW_22); if (state.failed) return ;
                        	    // InternalAle.g:2281:9: ( (lv_params_26_0= ruleexpression ) )
                        	    // InternalAle.g:2282:10: (lv_params_26_0= ruleexpression )
                        	    {
                        	    // InternalAle.g:2282:10: (lv_params_26_0= ruleexpression )
                        	    // InternalAle.g:2283:11: lv_params_26_0= ruleexpression
                        	    {
                        	    if ( state.backtracking==0 ) {

                        	      											newCompositeNode(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_1_1_0());
                        	      										
                        	    }
                        	    pushFollow(FOLLOW_20);
                        	    lv_params_26_0=ruleexpression();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop63;
                            }
                        } while (true);


                        }
                        break;

                }

                otherlv_27=(Token)match(input,30,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred42_InternalAle

    // $ANTLR start synpred43_InternalAle
    public final void synpred43_InternalAle_fragment() throws RecognitionException {   
        Token this_MultOp_29=null;
        EObject lv_right_30_0 = null;


        // InternalAle.g:2310:4: ( ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) )
        // InternalAle.g:2310:4: ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) )
        {
        // InternalAle.g:2310:4: ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) )
        // InternalAle.g:2311:5: () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) )
        {
        // InternalAle.g:2311:5: ()
        // InternalAle.g:2312:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        this_MultOp_29=(Token)match(input,RULE_MULTOP,FOLLOW_22); if (state.failed) return ;
        // InternalAle.g:2325:5: ( (lv_right_30_0= ruleexpression ) )
        // InternalAle.g:2326:6: (lv_right_30_0= ruleexpression )
        {
        // InternalAle.g:2326:6: (lv_right_30_0= ruleexpression )
        // InternalAle.g:2327:7: lv_right_30_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_3_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_30_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred43_InternalAle

    // $ANTLR start synpred44_InternalAle
    public final void synpred44_InternalAle_fragment() throws RecognitionException {   
        EObject lv_right_33_0 = null;


        // InternalAle.g:2346:4: ( ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) )
        // InternalAle.g:2346:4: ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) )
        {
        // InternalAle.g:2346:4: ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) )
        // InternalAle.g:2347:5: () ruleaddOp ( (lv_right_33_0= ruleexpression ) )
        {
        // InternalAle.g:2347:5: ()
        // InternalAle.g:2348:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        pushFollow(FOLLOW_22);
        ruleaddOp();

        state._fsp--;
        if (state.failed) return ;
        // InternalAle.g:2367:5: ( (lv_right_33_0= ruleexpression ) )
        // InternalAle.g:2368:6: (lv_right_33_0= ruleexpression )
        {
        // InternalAle.g:2368:6: (lv_right_33_0= ruleexpression )
        // InternalAle.g:2369:7: lv_right_33_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_4_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_33_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalAle

    // $ANTLR start synpred45_InternalAle
    public final void synpred45_InternalAle_fragment() throws RecognitionException {   
        EObject lv_right_36_0 = null;


        // InternalAle.g:2388:4: ( ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) )
        // InternalAle.g:2388:4: ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) )
        {
        // InternalAle.g:2388:4: ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) )
        // InternalAle.g:2389:5: () rulecompOp ( (lv_right_36_0= ruleexpression ) )
        {
        // InternalAle.g:2389:5: ()
        // InternalAle.g:2390:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        pushFollow(FOLLOW_22);
        rulecompOp();

        state._fsp--;
        if (state.failed) return ;
        // InternalAle.g:2409:5: ( (lv_right_36_0= ruleexpression ) )
        // InternalAle.g:2410:6: (lv_right_36_0= ruleexpression )
        {
        // InternalAle.g:2410:6: (lv_right_36_0= ruleexpression )
        // InternalAle.g:2411:7: lv_right_36_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_5_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_36_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalAle

    // $ANTLR start synpred46_InternalAle
    public final void synpred46_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_38=null;
        EObject lv_right_39_0 = null;


        // InternalAle.g:2430:4: ( ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) )
        // InternalAle.g:2430:4: ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) )
        {
        // InternalAle.g:2430:4: ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) )
        // InternalAle.g:2431:5: () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) )
        {
        // InternalAle.g:2431:5: ()
        // InternalAle.g:2432:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_38=(Token)match(input,50,FOLLOW_22); if (state.failed) return ;
        // InternalAle.g:2445:5: ( (lv_right_39_0= ruleexpression ) )
        // InternalAle.g:2446:6: (lv_right_39_0= ruleexpression )
        {
        // InternalAle.g:2446:6: (lv_right_39_0= ruleexpression )
        // InternalAle.g:2447:7: lv_right_39_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_6_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_39_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalAle

    // $ANTLR start synpred47_InternalAle
    public final void synpred47_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_41=null;
        EObject lv_right_42_0 = null;


        // InternalAle.g:2466:4: ( ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) )
        // InternalAle.g:2466:4: ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) )
        {
        // InternalAle.g:2466:4: ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) )
        // InternalAle.g:2467:5: () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) )
        {
        // InternalAle.g:2467:5: ()
        // InternalAle.g:2468:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_41=(Token)match(input,51,FOLLOW_22); if (state.failed) return ;
        // InternalAle.g:2481:5: ( (lv_right_42_0= ruleexpression ) )
        // InternalAle.g:2482:6: (lv_right_42_0= ruleexpression )
        {
        // InternalAle.g:2482:6: (lv_right_42_0= ruleexpression )
        // InternalAle.g:2483:7: lv_right_42_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_7_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_42_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred47_InternalAle

    // $ANTLR start synpred48_InternalAle
    public final void synpred48_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_right_45_0 = null;


        // InternalAle.g:2502:4: ( ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) )
        // InternalAle.g:2502:4: ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) )
        {
        // InternalAle.g:2502:4: ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) )
        // InternalAle.g:2503:5: () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) )
        {
        // InternalAle.g:2503:5: ()
        // InternalAle.g:2504:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_44=(Token)match(input,52,FOLLOW_22); if (state.failed) return ;
        // InternalAle.g:2517:5: ( (lv_right_45_0= ruleexpression ) )
        // InternalAle.g:2518:6: (lv_right_45_0= ruleexpression )
        {
        // InternalAle.g:2518:6: (lv_right_45_0= ruleexpression )
        // InternalAle.g:2519:7: lv_right_45_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_8_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_45_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred48_InternalAle

    // $ANTLR start synpred49_InternalAle
    public final void synpred49_InternalAle_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_right_48_0 = null;


        // InternalAle.g:2538:4: ( ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )
        // InternalAle.g:2538:4: ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) )
        {
        // InternalAle.g:2538:4: ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) )
        // InternalAle.g:2539:5: () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) )
        {
        // InternalAle.g:2539:5: ()
        // InternalAle.g:2540:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        otherlv_47=(Token)match(input,53,FOLLOW_22); if (state.failed) return ;
        // InternalAle.g:2553:5: ( (lv_right_48_0= ruleexpression ) )
        // InternalAle.g:2554:6: (lv_right_48_0= ruleexpression )
        {
        // InternalAle.g:2554:6: (lv_right_48_0= ruleexpression )
        // InternalAle.g:2555:7: lv_right_48_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_9_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_right_48_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred49_InternalAle

    // $ANTLR start synpred95_InternalAle
    public final void synpred95_InternalAle_fragment() throws RecognitionException {   
        EObject this_typeLiteral_0 = null;


        // InternalAle.g:3789:3: (this_typeLiteral_0= ruletypeLiteral )
        // InternalAle.g:3789:3: this_typeLiteral_0= ruletypeLiteral
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_typeLiteral_0=ruletypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalAle

    // Delegated rules

    public final boolean synpred48_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalAle() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalAle_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA21 dfa21 = new DFA21(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA35 dfa35 = new DFA35(this);
    static final String dfa_1s = "\33\uffff";
    static final String dfa_2s = "\1\4\25\0\5\uffff";
    static final String dfa_3s = "\1\130\25\0\5\uffff";
    static final String dfa_4s = "\26\uffff\1\1\1\2\1\3\1\4\1\5";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\5\uffff}>";
    static final String[] dfa_6s = {
            "\1\7\1\14\1\uffff\1\13\1\15\20\uffff\1\10\3\uffff\1\23\15\uffff\1\24\12\uffff\1\11\1\12\2\uffff\1\25\23\uffff\1\16\1\17\1\20\1\21\1\22\1\1\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1076:2: (this_rVarDecl_0= rulerVarDecl | this_rAssign_1= rulerAssign | this_rInsert_2= rulerInsert | this_rRemove_3= rulerRemove | this_rExpression_4= rulerExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_2 = input.LA(1);

                         
                        int index21_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA21_3 = input.LA(1);

                         
                        int index21_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA21_4 = input.LA(1);

                         
                        int index21_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA21_5 = input.LA(1);

                         
                        int index21_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA21_6 = input.LA(1);

                         
                        int index21_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA21_7 = input.LA(1);

                         
                        int index21_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA21_8 = input.LA(1);

                         
                        int index21_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalAle()) ) {s = 22;}

                        else if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA21_9 = input.LA(1);

                         
                        int index21_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA21_10 = input.LA(1);

                         
                        int index21_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA21_11 = input.LA(1);

                         
                        int index21_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA21_12 = input.LA(1);

                         
                        int index21_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA21_13 = input.LA(1);

                         
                        int index21_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA21_14 = input.LA(1);

                         
                        int index21_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA21_15 = input.LA(1);

                         
                        int index21_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA21_16 = input.LA(1);

                         
                        int index21_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA21_17 = input.LA(1);

                         
                        int index21_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA21_18 = input.LA(1);

                         
                        int index21_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA21_19 = input.LA(1);

                         
                        int index21_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA21_20 = input.LA(1);

                         
                        int index21_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA21_21 = input.LA(1);

                         
                        int index21_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalAle()) ) {s = 23;}

                        else if ( (synpred23_InternalAle()) ) {s = 24;}

                        else if ( (synpred24_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index21_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\30\uffff";
    static final String dfa_8s = "\1\4\23\uffff\1\0\3\uffff";
    static final String dfa_9s = "\1\130\23\uffff\1\0\3\uffff";
    static final String dfa_10s = "\1\uffff\1\1\24\uffff\1\2\1\uffff";
    static final String dfa_11s = "\24\uffff\1\0\3\uffff}>";
    static final String[] dfa_12s = {
            "\2\1\1\uffff\2\1\20\uffff\1\1\3\uffff\1\1\11\uffff\1\26\3\uffff\1\24\1\uffff\1\26\10\uffff\2\1\2\uffff\1\1\23\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1668:4: ( ( ( (lv_statements_2_0= rulerSimpleStatement ) ) otherlv_3= ';' ) | ( (lv_statements_4_0= rulerBlockStatement ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_20 = input.LA(1);

                         
                        int index25_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalAle()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index25_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\31\uffff";
    static final String dfa_14s = "\1\4\24\uffff\1\0\3\uffff";
    static final String dfa_15s = "\1\130\24\uffff\1\0\3\uffff";
    static final String dfa_16s = "\1\uffff\1\3\1\1\24\uffff\1\2\1\uffff";
    static final String dfa_17s = "\25\uffff\1\0\3\uffff}>";
    static final String[] dfa_18s = {
            "\2\2\1\uffff\2\2\20\uffff\1\2\1\1\2\uffff\1\2\11\uffff\1\27\3\uffff\1\25\1\uffff\1\27\10\uffff\2\2\2\uffff\1\2\23\uffff\13\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "()* loopback of 1715:4: ( ( ( (lv_statements_5_0= rulerSimpleStatement ) ) otherlv_6= ';' ) | ( (lv_statements_7_0= rulerBlockStatement ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_21 = input.LA(1);

                         
                        int index26_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalAle()) ) {s = 2;}

                        else if ( (synpred31_InternalAle()) ) {s = 23;}

                         
                        input.seek(index26_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\35\uffff";
    static final String dfa_20s = "\1\1\34\uffff";
    static final String dfa_21s = "\1\6\1\uffff\21\0\12\uffff";
    static final String dfa_22s = "\1\103\1\uffff\21\0\12\uffff";
    static final String dfa_23s = "\1\uffff\1\13\21\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_24s = "\2\uffff\1\7\1\4\1\14\1\0\1\5\1\6\1\20\1\2\1\13\1\15\1\10\1\12\1\16\1\17\1\1\1\11\1\3\12\uffff}>";
    static final String[] dfa_25s = {
            "\1\4\11\uffff\1\1\7\uffff\1\1\1\uffff\1\1\3\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\1\1\3\uffff\1\1\1\uffff\1\2\1\3\2\uffff\1\17\1\20\1\21\1\22\1\uffff\1\6\2\1\1\uffff\1\13\1\5\1\7\1\10\1\11\1\12\1\14\1\15\1\16",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "()* loopback of 1996:3: ( ( () otherlv_2= '.' ( (lv_name_3_0= RULE_IDENT ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleexpression ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleexpression ) ) )* )? otherlv_8= ')' ) | ( () otherlv_10= '.' ( (lv_feature_11_0= RULE_IDENT ) ) ) | ( () otherlv_13= '->' ( ( ( (lv_name_14_0= rulecollectionIterator ) ) otherlv_15= '(' ( (lv_varName_16_0= RULE_IDENT ) ) (otherlv_17= ':' ( (lv_varType_18_0= ruletypeLiteral ) ) )? otherlv_19= '|' ( (lv_lambda_20_0= ruleexpression ) ) otherlv_21= ')' ) | ( ( (lv_name_22_0= RULE_IDENT ) ) otherlv_23= '(' ( ( (lv_params_24_0= ruleexpression ) ) (otherlv_25= ',' ( (lv_params_26_0= ruleexpression ) ) )* )? otherlv_27= ')' ) ) ) | ( () this_MultOp_29= RULE_MULTOP ( (lv_right_30_0= ruleexpression ) ) ) | ( () ruleaddOp ( (lv_right_33_0= ruleexpression ) ) ) | ( () rulecompOp ( (lv_right_36_0= ruleexpression ) ) ) | ( () otherlv_38= 'and' ( (lv_right_39_0= ruleexpression ) ) ) | ( () otherlv_41= 'or' ( (lv_right_42_0= ruleexpression ) ) ) | ( () otherlv_44= 'xor' ( (lv_right_45_0= ruleexpression ) ) ) | ( () otherlv_47= 'implie' ( (lv_right_48_0= ruleexpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_5 = input.LA(1);

                         
                        int index35_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalAle()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_16 = input.LA(1);

                         
                        int index35_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalAle()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_9 = input.LA(1);

                         
                        int index35_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_18 = input.LA(1);

                         
                        int index35_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalAle()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_18);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalAle()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA35_6 = input.LA(1);

                         
                        int index35_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalAle()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalAle()) ) {s = 19;}

                        else if ( (synpred37_InternalAle()) ) {s = 20;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA35_12 = input.LA(1);

                         
                        int index35_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA35_17 = input.LA(1);

                         
                        int index35_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAle()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_17);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA35_13 = input.LA(1);

                         
                        int index35_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA35_10 = input.LA(1);

                         
                        int index35_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_10);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA35_4 = input.LA(1);

                         
                        int index35_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalAle()) ) {s = 22;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_4);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA35_11 = input.LA(1);

                         
                        int index35_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_11);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA35_14 = input.LA(1);

                         
                        int index35_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA35_15 = input.LA(1);

                         
                        int index35_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAle()) ) {s = 25;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA35_8 = input.LA(1);

                         
                        int index35_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalAle()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index35_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000720002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000700002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000002800000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000139E000030L,0x0000000001F80000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x000000009C000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000098000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000001302000030L,0x0000000001F80000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001342000030L,0x0000000001F80000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000041000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000400010000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x04C00800220001B0L,0x0000000001FFC000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x04C00A00220001B0L,0x0000000001FFC000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x04C02893260001B0L,0x0000000001FFC000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xF8BCC00000000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x04C00800620001B0L,0x0000000001FFC000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000010L,0x0000000000003FF0L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0003000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000002000010L,0x0000000001F80000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000010001000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0801000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x04C00800260001B0L,0x0000000001FFC000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000005000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0002000004000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000400000000002L});

}