<?xml version="1.0" encoding="ASCII"?>
<miniJava:Program xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:miniJava="http://miniJava.miniJava.miniJava/" xsi:schemaLocation="http://miniJava.miniJava.miniJava/ /org.tetrabox.minijava.xtext/model/MiniJava.ecore">
  <classes xsi:type="miniJava:Interface" name="I">
    <members xsi:type="miniJava:Method" name="hello" access="public">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
    </members>
  </classes>
  <classes xsi:type="miniJava:Clazz" name="X" implementz="//@classes.0">
    <members xsi:type="miniJava:Field" name="i" access="public">
      <typeRef xsi:type="miniJava:IntegerTypeRef"/>
    </members>
    <members xsi:type="miniJava:Field" name="b" access="public">
      <typeRef xsi:type="miniJava:BooleanTypeRef"/>
    </members>
    <members xsi:type="miniJava:Field" name="s" access="public">
      <typeRef xsi:type="miniJava:StringTypeRef"/>
    </members>
    <members xsi:type="miniJava:Method" access="public">
      <typeRef xsi:type="miniJava:ClassRef" referencedClass="//@classes.1"/>
      <params name="j">
        <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      </params>
      <body>
        <statements xsi:type="miniJava:Assignment">
          <assignee xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.0">
            <receiver xsi:type="miniJava:This"/>
          </assignee>
          <value xsi:type="miniJava:SymbolRef" symbol="//@classes.1/@members.3/@params.0"/>
        </statements>
      </body>
    </members>
    <members xsi:type="miniJava:Method" name="identity" access="public">
      <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      <params name="j">
        <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      </params>
      <body>
        <statements xsi:type="miniJava:Return">
          <expression xsi:type="miniJava:SymbolRef" symbol="//@classes.1/@members.4/@params.0"/>
        </statements>
      </body>
    </members>
    <members xsi:type="miniJava:Method" name="hello" access="public">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
      <body>
        <statements xsi:type="miniJava:PrintStatement">
          <expression xsi:type="miniJava:StringConstant" value="hello"/>
        </statements>
      </body>
    </members>
    <members xsi:type="miniJava:Method" name="increment" access="public">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
      <params name="inc">
        <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      </params>
      <body>
        <statements xsi:type="miniJava:Assignment">
          <assignee xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.0">
            <receiver xsi:type="miniJava:This"/>
          </assignee>
          <value xsi:type="miniJava:Plus">
            <left xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.0">
              <receiver xsi:type="miniJava:This"/>
            </left>
            <right xsi:type="miniJava:SymbolRef" symbol="//@classes.1/@members.6/@params.0"/>
          </value>
        </statements>
      </body>
    </members>
    <members xsi:type="miniJava:Method" name="testString" access="public">
      <typeRef xsi:type="miniJava:BooleanTypeRef"/>
      <params name="tested">
        <typeRef xsi:type="miniJava:StringTypeRef"/>
      </params>
      <body>
        <statements xsi:type="miniJava:Return">
          <expression xsi:type="miniJava:Equality">
            <left xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.2">
              <receiver xsi:type="miniJava:This"/>
            </left>
            <right xsi:type="miniJava:SymbolRef" symbol="//@classes.1/@members.7/@params.0"/>
          </expression>
        </statements>
      </body>
    </members>
    <members xsi:type="miniJava:Method" name="getI" access="public">
      <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      <body>
        <statements xsi:type="miniJava:Return">
          <expression xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.0">
            <receiver xsi:type="miniJava:This"/>
          </expression>
        </statements>
      </body>
    </members>
  </classes>
  <classes xsi:type="miniJava:Clazz" name="Y" isabstract="true" superClass="//@classes.1">
    <members xsi:type="miniJava:Method" name="ymethod" access="public" isabstract="true">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
    </members>
    <members xsi:type="miniJava:Method" name="identity" access="public">
      <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      <params name="j">
        <typeRef xsi:type="miniJava:IntegerTypeRef"/>
      </params>
      <body>
        <statements xsi:type="miniJava:Return">
          <expression xsi:type="miniJava:Plus">
            <left xsi:type="miniJava:SymbolRef" symbol="//@classes.2/@members.1/@params.0"/>
            <right xsi:type="miniJava:IntConstant" value="1"/>
          </expression>
        </statements>
      </body>
    </members>
  </classes>
  <classes xsi:type="miniJava:Clazz" name="Z" superClass="//@classes.2">
    <members xsi:type="miniJava:Method" name="ymethod" access="public">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
      <body>
        <statements xsi:type="miniJava:PrintStatement">
          <expression xsi:type="miniJava:StringConstant" value="ymethod"/>
        </statements>
      </body>
    </members>
  </classes>
  <classes xsi:type="miniJava:Clazz" name="Main">
    <members xsi:type="miniJava:Method" name="main" access="public" isstatic="true">
      <typeRef xsi:type="miniJava:VoidTypeRef"/>
      <params name="args">
        <typeRef xsi:type="miniJava:ArrayTypeRef">
          <typeRef xsi:type="miniJava:StringTypeRef"/>
        </typeRef>
      </params>
      <body>
        <statements xsi:type="miniJava:Assignment">
          <assignee xsi:type="miniJava:VariableDeclaration" name="y">
            <typeRef xsi:type="miniJava:ClassRef" referencedClass="//@classes.1"/>
          </assignee>
          <value xsi:type="miniJava:NewObject" type="//@classes.1"/>
        </statements>
        <statements xsi:type="miniJava:Assignment">
          <assignee xsi:type="miniJava:FieldAccess" field="//@classes.1/@members.0">
            <receiver xsi:type="miniJava:SymbolRef" symbol="//@classes.4/@members.0/@body/@statements.0/@assignee"/>
          </assignee>
          <value xsi:type="miniJava:IntConstant" value="76"/>
        </statements>
      </body>
    </members>
  </classes>
</miniJava:Program>
